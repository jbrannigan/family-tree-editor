name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    name: Unit (Vitest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      - name: Run unit tests
        run: npx vitest run --reporter=dot

  e2e:
    name: E2E (Playwright) â€“ shard ${{ matrix.shard }}
    runs-on: ubuntu-latest
    continue-on-error: true            # job non-blocking (flip to false later)
    strategy:
      fail-fast: false
      matrix:
        shard: [1/3, 2/3, 3/3]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      # Cache Playwright browser binaries based on lockfile hash
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-pw-

      - name: Install Playwright (Chromium only)
        run: npx playwright install --with-deps chromium

      - name: Run Playwright (${{ matrix.shard }})
        run: npx playwright test --shard=${{ matrix.shard }} --reporter=html
        continue-on-error: true        # step non-blocking (belt & suspenders)

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.shard }}
          path: playwright-report
          retention-days: 7
