name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-format:
    name: Lint & format check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci || npm i
      - name: Prettier (no changes)
        run: npm run format:check
      - name: ESLint
        run: npm run lint

  unit:
    name: Unit (Vitest) — Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      - name: Run unit tests (Vitest)
        run: npm run test:unit
        
    unit-summary:
    name: Unit (summary)
    runs-on: ubuntu-latest
    needs: [unit]
    if: ${{ always() }}
    steps:
      - name: Fail if any Unit matrix job failed/cancelled
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: |
          echo "At least one Unit job failed or was cancelled."
          exit 1
      - name: All Unit jobs passed
        if: ${{ !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
        run: echo "All green ✅"

  e2e:
    name: E2E (Playwright)
    needs: [lint-format]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3]
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install deps
        run: npm ci || npm i
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ hashFiles('package-lock.json') }}
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Run Playwright (shard ${{ matrix.shard }})
        env:
          PLAYWRIGHT_HTML_REPORT: playwright-report
        run: npx playwright test --shard=${{ matrix.shard }}/3 --reporter=line
      - name: Upload shard report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ matrix.shard }}
          path: playwright-report
          if-no-files-found: ignore
          retention-days: 7

  e2e-summary:
    name: E2E (summary)
    needs: [e2e]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Summarize shards
        run: |
          echo "Overall E2E result: **${{ needs.e2e.result }}**" >> $GITHUB_STEP_SUMMARY
