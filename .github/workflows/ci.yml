name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

# Cancel previous runs for the same branch/PR
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    name: Unit (Vitest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      - name: Run unit tests
        run: npx vitest run --reporter=dot

  e2e:
    # run e2e in parallel with unit to reduce wall-clock, or set: needs: unit
    name: E2E (Playwright) â€“ shard ${{ matrix.shard }}
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard: [1/3, 2/3, 3/3]    # 3-way split for speed
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci || npm i

      # Cache Playwright browser binaries (~/.cache/ms-playwright) by version
      - name: Get Playwright version
        id: pw
        run: echo "version=$(node -p \"require('@playwright/test/package.json').version\")" >> "$GITHUB_OUTPUT"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ steps.pw.outputs.version }}

      # Install only Chromium (much faster than all browsers)
      - name: Install Playwright (Chromium only)
        run: npx playwright install --with-deps chromium

      # Run e2e tests sharded; non-blocking while you tune the suite
      - name: Run Playwright (${{ matrix.shard }})
        run: npx playwright test --shard=${{ matrix.shard }} --reporter=dot
        continue-on-error: true   # flip to false to make e2e blocking
