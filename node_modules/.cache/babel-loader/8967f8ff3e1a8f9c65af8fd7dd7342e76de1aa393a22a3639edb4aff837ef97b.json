{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus,\n  focusedNodeId\n}) => {\n  _s();\n  var _node$children;\n  const [collapsed, setCollapsed] = useState(false);\n  const toggleCollapse = () => setCollapsed(!collapsed);\n  const isFocused = node.id === focusedNodeId;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.length) > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleCollapse,\n        style: {\n          marginRight: 6\n        },\n        children: collapsed ? \"+\" : \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), !isFocused && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onFocus(node),\n        style: {\n          marginLeft: \"auto\",\n          marginRight: 4\n        },\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), !collapsed && node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, node.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus,\n  onUnfocus,\n  focusedNodeId\n}) => {\n  if (!tree) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  const isTreeArray = Array.isArray(tree);\n  const nodes = isTreeArray ? tree : [tree];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View (Collapsible)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), focusedNodeId && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onUnfocus,\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: \"Unfocus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: \"none\",\n        paddingLeft: \"20px\"\n      },\n      children: nodes.map(node => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","onFocus","focusedNodeId","_s","_node$children","collapsed","setCollapsed","toggleCollapse","isFocused","id","children","style","display","alignItems","length","onClick","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","name","marginLeft","map","child","_c","TreeView","tree","onUnfocus","isTreeArray","Array","isArray","nodes","marginBottom","listStyleType","paddingLeft","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TreeNode = ({ node, onFocus, focusedNodeId }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleCollapse = () => setCollapsed(!collapsed);\r\n  const isFocused = node.id === focusedNodeId;\r\n\r\n  return (\r\n    <li key={node.id}>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        {node.children?.length > 0 && (\r\n          <button onClick={toggleCollapse} style={{ marginRight: 6 }}>\r\n            {collapsed ? \"+\" : \"-\"}\r\n          </button>\r\n        )}\r\n        <span>{node.name}</span>\r\n        {!isFocused && (\r\n          <button\r\n            onClick={() => onFocus(node)}\r\n            style={{ marginLeft: \"auto\", marginRight: 4 }}\r\n          >\r\n            Focus\r\n          </button>\r\n        )}\r\n      </div>\r\n      {!collapsed && node.children && node.children.length > 0 && (\r\n        <ul>\r\n          {node.children.map((child) => (\r\n            <TreeNode\r\n              key={child.id}\r\n              node={child}\r\n              onFocus={onFocus}\r\n              focusedNodeId={focusedNodeId}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus, onUnfocus, focusedNodeId }) => {\r\n  if (!tree) {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  const isTreeArray = Array.isArray(tree);\r\n  const nodes = isTreeArray ? tree : [tree];\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tree View (Collapsible)</h3>\r\n      {focusedNodeId && (\r\n        <button onClick={onUnfocus} style={{ marginBottom: \"10px\" }}>\r\n          Unfocus\r\n        </button>\r\n      )}\r\n      <ul style={{ listStyleType: \"none\", paddingLeft: \"20px\" }}>\r\n        {nodes.map((node) => (\r\n          <TreeNode\r\n            key={node.id}\r\n            node={node}\r\n            onFocus={onFocus}\r\n            focusedNodeId={focusedNodeId}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}