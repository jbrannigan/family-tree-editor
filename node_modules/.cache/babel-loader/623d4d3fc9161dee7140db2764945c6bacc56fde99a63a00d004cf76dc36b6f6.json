{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeEditor.js\";\n// TreeEditor.js\nimport React from \"react\";\nimport \"./TreeEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TreeEditor({\n  treeText,\n  onTextChange\n}) {\n  // Build line numbers from the current text\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\n  const gutterLines = Array.from({\n    length: lineCount\n  }, (_, i) => i + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"te-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-gutter\",\n      \"aria-hidden\": \"true\",\n      children: gutterLines.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"te-line\",\n        children: n\n      }, n, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"te-textarea\",\n      \"aria-label\": \"Family tree text editor\",\n      value: treeText,\n      onChange: e => onTextChange(e.target.value),\n      spellCheck: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = TreeEditor;\nvar _c;\n$RefreshReg$(_c, \"TreeEditor\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TreeEditor","treeText","onTextChange","lineCount","Math","max","match","length","gutterLines","Array","from","_","i","className","children","map","n","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","spellCheck","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeEditor.js"],"sourcesContent":["// TreeEditor.js\r\nimport React from \"react\";\r\nimport \"./TreeEditor.css\";\r\n\r\nexport default function TreeEditor({ treeText, onTextChange }) {\r\n  // Build line numbers from the current text\r\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\r\n  const gutterLines = Array.from({ length: lineCount }, (_, i) => i + 1);\r\n\r\n  return (\r\n    <div className=\"te-wrap\">\r\n      <div className=\"te-gutter\" aria-hidden=\"true\">\r\n        {gutterLines.map((n) => (\r\n          <div key={n} className=\"te-line\">\r\n            {n}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"te-textarea\"\r\n        aria-label=\"Family tree text editor\"\r\n        value={treeText}\r\n        onChange={(e) => onTextChange(e.target.value)}\r\n        spellCheck={false}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAC7D;EACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAACJ,QAAQ,CAACK,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAEC,MAAM,GAAG,CAAC,CAAC;EACvE,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAEJ;EAAU,CAAC,EAAE,CAACQ,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EAEtE,oBACEb,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBf,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAC,eAAY,MAAM;MAAAC,QAAA,EAC1CN,WAAW,CAACO,GAAG,CAAEC,CAAC,iBACjBjB,OAAA;QAAac,SAAS,EAAC,SAAS;QAAAC,QAAA,EAC7BE;MAAC,GADMA,CAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrB,OAAA;MACEc,SAAS,EAAC,aAAa;MACvB,cAAW,yBAAyB;MACpCQ,KAAK,EAAEpB,QAAS;MAChBqB,QAAQ,EAAGC,CAAC,IAAKrB,YAAY,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,UAAU,EAAE;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACM,EAAA,GAxBuB1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}