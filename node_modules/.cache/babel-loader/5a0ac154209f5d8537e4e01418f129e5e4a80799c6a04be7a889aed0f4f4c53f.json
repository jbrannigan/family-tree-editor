{"ast":null,"code":"export function generateHTML(tree) {\n  function renderNode(node) {\n    if (!node.children || node.children.length === 0) {\n      return `<li>${node.name}</li>`;\n    }\n    const childrenHTML = node.children.map(renderNode).join('');\n    return `\n      <li>\n        <details open>\n          <summary>${node.name}</summary>\n          <ul>${childrenHTML}</ul>\n        </details>\n      </li>\n    `;\n  }\n  return `\n    <!DOCTYPE html>\n    <html>\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>McGinty Family Tree</title>\n      <style>\n        body { font-family: sans-serif; padding: 20px; }\n        ul { list-style: none; padding-left: 20px; }\n        details > summary { cursor: pointer; }\n        details[open] > summary { font-weight: bold; }\n      </style>\n    </head>\n    <body>\n      <ul>${renderNode(tree)}</ul>\n    </body>\n    </html>\n  `;\n}","map":{"version":3,"names":["generateHTML","tree","renderNode","node","children","length","name","childrenHTML","map","join"],"sources":["/home/jbrannigan/src/familytree/src/utils/generateHTML.js"],"sourcesContent":["export function generateHTML(tree) {\r\n  function renderNode(node) {\r\n    if (!node.children || node.children.length === 0) {\r\n      return `<li>${node.name}</li>`;\r\n    }\r\n\r\n    const childrenHTML = node.children.map(renderNode).join('');\r\n    return `\r\n      <li>\r\n        <details open>\r\n          <summary>${node.name}</summary>\r\n          <ul>${childrenHTML}</ul>\r\n        </details>\r\n      </li>\r\n    `;\r\n  }\r\n\r\n  return `\r\n    <!DOCTYPE html>\r\n    <html>\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <title>McGinty Family Tree</title>\r\n      <style>\r\n        body { font-family: sans-serif; padding: 20px; }\r\n        ul { list-style: none; padding-left: 20px; }\r\n        details > summary { cursor: pointer; }\r\n        details[open] > summary { font-weight: bold; }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <ul>${renderNode(tree)}</ul>\r\n    </body>\r\n    </html>\r\n  `;\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,IAAI,EAAE;EACjC,SAASC,UAAUA,CAACC,IAAI,EAAE;IACxB,IAAI,CAACA,IAAI,CAACC,QAAQ,IAAID,IAAI,CAACC,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE;MAChD,OAAO,OAAOF,IAAI,CAACG,IAAI,OAAO;IAChC;IAEA,MAAMC,YAAY,GAAGJ,IAAI,CAACC,QAAQ,CAACI,GAAG,CAACN,UAAU,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;IAC3D,OAAO;AACX;AACA;AACA,qBAAqBN,IAAI,CAACG,IAAI;AAC9B,gBAAgBC,YAAY;AAC5B;AACA;AACA,KAAK;EACH;EAEA,OAAO;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYL,UAAU,CAACD,IAAI,CAAC;AAC5B;AACA;AACA,GAAG;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}