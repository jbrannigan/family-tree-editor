{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _focusedNode$id;\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [focusedNode, setFocusedNode] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState({});\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n    } catch (error) {\n      console.error(\"Failed to parse tree text:\", error);\n    }\n  }, [treeText]);\n  const handleTextChange = e => setTreeText(e.target.value);\n  const handleFileLoad = text => setTreeText(text);\n  const handleFocus = node => {\n    setFocusedNode(node);\n  };\n  const handleUnFocus = () => {\n    setFocusedNode(null);\n  };\n  const toggleNode = id => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      gap: \"1rem\",\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n      onFileLoad: handleFileLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: treeText,\n      onChange: handleTextChange,\n      rows: 10,\n      style: {\n        width: \"100%\",\n        fontFamily: \"monospace\",\n        whiteSpace: \"pre\"\n      },\n      placeholder: \"Paste or type your tree here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"2rem\",\n        alignItems: \"flex-start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Tree View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          onUnfocus: handleUnFocus,\n          focusedNodeId: (_focusedNode$id = focusedNode === null || focusedNode === void 0 ? void 0 : focusedNode.id) !== null && _focusedNode$id !== void 0 ? _focusedNode$id : null,\n          expandedNodes: expandedNodes,\n          toggleNode: toggleNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SVG View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n          treeData: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n      treeData: treeData,\n      rawText: treeText,\n      focusedNode: focusedNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZYKfOT34L5feNxiOI0Rvdv+PbcU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","UploadButton","DownloadButtons","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","_focusedNode$id","treeText","setTreeText","treeData","setTreeData","focusedNode","setFocusedNode","expandedNodes","setExpandedNodes","parsed","error","console","handleTextChange","e","target","value","handleFileLoad","text","handleFocus","node","handleUnFocus","toggleNode","id","prev","displayedTree","className","style","display","flexDirection","gap","padding","children","onFileLoad","fileName","_jsxFileName","lineNumber","columnNumber","onChange","rows","width","fontFamily","whiteSpace","placeholder","alignItems","flex","tree","onFocus","onUnfocus","focusedNodeId","rawText","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButtons from \"./DownloadButtons\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\n\r\nexport default function App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [focusedNode, setFocusedNode] = useState(null);\r\n  const [expandedNodes, setExpandedNodes] = useState({});\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n    } catch (error) {\r\n      console.error(\"Failed to parse tree text:\", error);\r\n    }\r\n  }, [treeText]);\r\n\r\n  const handleTextChange = (e) => setTreeText(e.target.value);\r\n  const handleFileLoad = (text) => setTreeText(text);\r\n\r\n  const handleFocus = (node) => {\r\n    setFocusedNode(node);\r\n  };\r\n\r\n  const handleUnFocus = () => {\r\n    setFocusedNode(null);\r\n  };\r\n\r\n  const toggleNode = (id) => {\r\n    setExpandedNodes((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\", padding: \"1rem\" }}>\r\n      <UploadButton onFileLoad={handleFileLoad} />\r\n\r\n      <textarea\r\n        value={treeText}\r\n        onChange={handleTextChange}\r\n        rows={10}\r\n        style={{ width: \"100%\", fontFamily: \"monospace\", whiteSpace: \"pre\" }}\r\n        placeholder=\"Paste or type your tree here...\"\r\n      />\r\n\r\n      <div style={{ display: \"flex\", gap: \"2rem\", alignItems: \"flex-start\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <h2>Tree View</h2>\r\n          <TreeView\r\n            tree={displayedTree}\r\n            onFocus={handleFocus}\r\n            onUnfocus={handleUnFocus}\r\n            focusedNodeId={focusedNode?.id ?? null}\r\n            expandedNodes={expandedNodes}\r\n            toggleNode={toggleNode}\r\n          />\r\n        </div>\r\n\r\n        <div style={{ flex: 1 }}>\r\n          <h2>SVG View</h2>\r\n          <GraphView treeData={displayedTree} />\r\n        </div>\r\n      </div>\r\n\r\n      <DownloadButtons\r\n        treeData={treeData}\r\n        rawText={treeText}\r\n        focusedNode={focusedNode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}