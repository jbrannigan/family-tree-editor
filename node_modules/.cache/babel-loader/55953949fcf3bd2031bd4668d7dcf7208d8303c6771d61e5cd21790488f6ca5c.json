{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport findNodeById from \"./utils/findNodeById\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\n\n  // Parse tree text into JSON structure\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Parse error:\", err);\n      setTreeData([]);\n    }\n  }, [treeText]);\n\n  // Get the currently focused node, if any\n  const focusedNode = focusedNodeId ? findNodeById(treeData, focusedNodeId) : null;\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n  const handleFileLoad = text => {\n    setTreeText(text);\n  };\n  const handleTextChange = e => {\n    setTreeText(e.target.value);\n  };\n  const handleFocus = node => {\n    setFocusedNodeId(node.id);\n  };\n  const handleUnfocus = () => {\n    setFocusedNodeId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"1rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tree Text Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: treeText,\n          onChange: handleTextChange,\n          rows: 25,\n          cols: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n          onLoad: handleFileLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n          treeText: treeText,\n          treeData: treeData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          focusedNodeId: focusedNode ? focusedNode.id : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), focusedNode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUnfocus,\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: \"Unfocus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wMQ9UCyr3gO/YhdVz/m0RrZERO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","UploadButton","DownloadButtons","parseTree","generateHTML","findNodeById","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","focusedNodeId","setFocusedNodeId","parsed","err","console","error","focusedNode","displayedTree","handleFileLoad","text","handleTextChange","e","target","value","handleFocus","node","id","handleUnfocus","className","style","padding","children","display","gap","flex","fileName","_jsxFileName","lineNumber","columnNumber","onChange","rows","cols","onLoad","tree","onFocus","onClick","marginTop","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButtons from \"./DownloadButtons\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\nimport findNodeById from \"./utils/findNodeById\";\r\n\r\nfunction App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\r\n\r\n  // Parse tree text into JSON structure\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Parse error:\", err);\r\n      setTreeData([]);\r\n    }\r\n  }, [treeText]);\r\n\r\n  // Get the currently focused node, if any\r\n  const focusedNode = focusedNodeId\r\n    ? findNodeById(treeData, focusedNodeId)\r\n    : null;\r\n\r\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\r\n\r\n  const handleFileLoad = (text) => {\r\n    setTreeText(text);\r\n  };\r\n\r\n  const handleTextChange = (e) => {\r\n    setTreeText(e.target.value);\r\n  };\r\n\r\n  const handleFocus = (node) => {\r\n    setFocusedNodeId(node.id);\r\n  };\r\n\r\n  const handleUnfocus = () => {\r\n    setFocusedNodeId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"1rem\" }}>\r\n      <div style={{ display: \"flex\", gap: \"1rem\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <h3>Tree Text Editor</h3>\r\n          <textarea\r\n            value={treeText}\r\n            onChange={handleTextChange}\r\n            rows={25}\r\n            cols={50}\r\n          />\r\n          <br />\r\n          <UploadButton onLoad={handleFileLoad} />\r\n          <DownloadButtons treeText={treeText} treeData={treeData} />\r\n        </div>\r\n\r\n        <div style={{ flex: 1 }}>\r\n          <TreeView\r\n            tree={displayedTree}\r\n            onFocus={handleFocus}\r\n            focusedNodeId={focusedNode ? focusedNode.id : null}\r\n          />\r\n          {focusedNode && (\r\n            <button onClick={handleUnfocus} style={{ marginTop: \"1rem\" }}>\r\n              Unfocus\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div style={{ flex: 1 }}>\r\n          <GraphView tree={displayedTree} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}