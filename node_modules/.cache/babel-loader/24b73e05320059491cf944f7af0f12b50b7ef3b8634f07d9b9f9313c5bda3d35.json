{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  expandedNodes,\n  toggleNode,\n  onFocus,\n  focusedNodeId\n}) => {\n  const isExpanded = expandedNodes[node.id];\n  const isFocused = focusedNodeId === node.id;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      children: [node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleNode(node.id),\n        children: isExpanded ? \"−\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: 6\n        },\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: 10\n        },\n        onClick: () => onFocus(node.id),\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), isExpanded && node.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(TreeNode, {\n        //use stable ID, not index\n        node: child,\n        expandedNodes: expandedNodes,\n        toggleNode: toggleNode,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus,\n  focusedNodeId,\n  onUnfocus\n}) => {\n  _s();\n  const [expandedNodes, setExpandedNodes] = useState({});\n  const toggleNode = id => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const getFocusedSubtree = node => {\n    if (node.id === focusedNodeId) return node;\n    if (!node.children) return null;\n    for (let child of node.children) {\n      const result = getFocusedSubtree(child);\n      if (result) return result;\n    }\n    return null;\n  };\n  let displayTree = tree;\n  if (focusedNodeId) {\n    displayTree = getFocusedSubtree(tree);\n  }\n  if (!displayTree) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Tree View \", focusedNodeId && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onUnfocus,\n        children: \"Unfocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: displayTree,\n        expandedNodes: expandedNodes,\n        toggleNode: toggleNode,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeView, \"FnQji8mxciD8ZbGhuj/np5gNXdg=\");\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","expandedNodes","toggleNode","onFocus","focusedNodeId","isExpanded","id","isFocused","children","style","display","alignItems","length","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","name","map","child","_c","TreeView","tree","onUnfocus","_s","setExpandedNodes","prev","getFocusedSubtree","result","displayTree","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst TreeNode = ({ node, expandedNodes, toggleNode, onFocus, focusedNodeId }) => {\r\n  const isExpanded = expandedNodes[node.id];\r\n\r\n  const isFocused = focusedNodeId === node.id;\r\n\r\n  return (\r\n    <li>\r\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        {node.children && node.children.length > 0 && (\r\n          <button onClick={() => toggleNode(node.id)}>\r\n            {isExpanded ? \"−\" : \"+\"}\r\n          </button>\r\n        )}\r\n        <span style={{ marginLeft: 6 }}>{node.name}</span>\r\n        <button style={{ marginLeft: 10 }} onClick={() => onFocus(node.id)}>\r\n          Focus\r\n        </button>\r\n      </div>\r\n      {isExpanded && node.children && (\r\n        <ul>\r\n          {node.children.map((child) => (\r\n            <TreeNode\r\n              key={child.id} //use stable ID, not index\r\n              node={child}\r\n              expandedNodes={expandedNodes}\r\n              toggleNode={toggleNode}\r\n              onFocus={onFocus}\r\n              focusedNodeId={focusedNodeId}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus, focusedNodeId, onUnfocus }) => {\r\n  const [expandedNodes, setExpandedNodes] = useState({});\r\n\r\n  const toggleNode = (id) => {\r\n    setExpandedNodes((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  const getFocusedSubtree = (node) => {\r\n    if (node.id === focusedNodeId) return node;\r\n    if (!node.children) return null;\r\n    for (let child of node.children) {\r\n      const result = getFocusedSubtree(child);\r\n      if (result) return result;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  let displayTree = tree;\r\n  if (focusedNodeId) {\r\n    displayTree = getFocusedSubtree(tree);\r\n  }\r\n\r\n  if (!displayTree) {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tree View {focusedNodeId && <button onClick={onUnfocus}>Unfocus</button>}</h3>\r\n      <ul>\r\n        <TreeNode\r\n          node={displayTree}\r\n          expandedNodes={expandedNodes}\r\n          toggleNode={toggleNode}\r\n          onFocus={onFocus}\r\n          focusedNodeId={focusedNodeId}\r\n        />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}