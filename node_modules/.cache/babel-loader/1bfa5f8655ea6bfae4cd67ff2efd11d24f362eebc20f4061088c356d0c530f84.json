{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React, { useState } from \"react\";\nimport \"./TreeView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row({\n  children,\n  level\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-row\",\n    style: {\n      marginLeft: level * 18\n    } // indentation\n    ,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\nfunction Toggle({\n  visible,\n  expanded,\n  onClick\n}) {\n  if (!visible) return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"tree-toggle-spacer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: \"tree-toggle\",\n    \"aria-label\": expanded ? \"Collapse\" : \"Expand\",\n    \"aria-expanded\": expanded,\n    onClick: onClick,\n    children: expanded ? \"‚ñæ\" : \"‚ñ∏\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Toggle;\nfunction TreeNode({\n  node,\n  level,\n  onFocus,\n  focusedNodeId\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(true);\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\n  const isFocused = focusedNodeId === node.id;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      level: level,\n      children: [/*#__PURE__*/_jsxDEV(Toggle, {\n        visible: hasChildren,\n        expanded: expanded,\n        onClick: () => setExpanded(e => !e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `tree-node-name ${isFocused ? \"focused\" : \"\"}`,\n        children: node.name || \"(unnamed)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), !isFocused && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"tree-focus-btn\",\n        title: \"Focus\",\n        \"aria-label\": `Focus on ${node.name || \"unnamed node\"}`,\n        onClick: () => onFocus(node),\n        children: \"\\uD83D\\uDD0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), hasChildren && expanded && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tree-children\",\n      children: node.children.map((child, i) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        level: level + 1,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeNode, \"NZEs4N34I2vU569ODzuIjdsqMlo=\");\n_c3 = TreeNode;\nexport default function TreeView({\n  tree,\n  onFocus,\n  focusedNodeId\n}) {\n  if (!tree) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No tree data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 21\n  }, this);\n  const nodes = Array.isArray(tree) ? tree : [tree];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-view\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tree-root\",\n      children: nodes.map((n, i) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: n,\n        level: 0,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, n.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_c4 = TreeView;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Toggle\");\n$RefreshReg$(_c3, \"TreeNode\");\n$RefreshReg$(_c4, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Row","children","level","className","style","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","_c","Toggle","visible","expanded","onClick","type","_c2","TreeNode","node","onFocus","focusedNodeId","_s","setExpanded","hasChildren","Array","isArray","length","isFocused","id","e","name","title","map","child","i","_c3","TreeView","tree","nodes","n","_c4","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\nimport React, { useState } from \"react\";\nimport \"./TreeView.css\";\n\nfunction Row({ children, level }) {\n  return (\n    <div\n      className=\"tree-row\"\n      style={{ marginLeft: level * 18 }} // indentation\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction Toggle({ visible, expanded, onClick }) {\n  if (!visible) return <span className=\"tree-toggle-spacer\" />;\n  return (\n    <button\n      type=\"button\"\n      className=\"tree-toggle\"\n      aria-label={expanded ? \"Collapse\" : \"Expand\"}\n      aria-expanded={expanded}\n      onClick={onClick}\n    >\n      {expanded ? \"‚ñæ\" : \"‚ñ∏\"}\n    </button>\n  );\n}\n\nfunction TreeNode({ node, level, onFocus, focusedNodeId }) {\n  const [expanded, setExpanded] = useState(true);\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\n  const isFocused = focusedNodeId === node.id;\n\n  return (\n    <li className=\"tree-node\">\n      <Row level={level}>\n        <Toggle\n          visible={hasChildren}\n          expanded={expanded}\n          onClick={() => setExpanded((e) => !e)}\n        />\n\n        <span className={`tree-node-name ${isFocused ? \"focused\" : \"\"}`}>\n          {node.name || \"(unnamed)\"}\n        </span>\n\n        {/* de-emphasized focus control */}\n        {!isFocused && (\n          <button\n            type=\"button\"\n            className=\"tree-focus-btn\"\n            title=\"Focus\"\n            aria-label={`Focus on ${node.name || \"unnamed node\"}` }\n            onClick={() => onFocus(node)}\n          >\n            üîç\n          </button>\n        )}\n      </Row>\n\n      {hasChildren && expanded && (\n        <ul className=\"tree-children\">\n          {node.children.map((child, i) => (\n            <TreeNode\n              key={child.id}\n              node={child}\n              level={level + 1}\n              onFocus={onFocus}\n              focusedNodeId={focusedNodeId}\n            />\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n}\n\nexport default function TreeView({ tree, onFocus, focusedNodeId }) {\n  if (!tree) return <div>No tree data available</div>;\n  const nodes = Array.isArray(tree) ? tree : [tree];\n\n  return (\n    <div className=\"tree-view\">\n      <ul className=\"tree-root\">\n        {nodes.map((n, i) => (\n          <TreeNode\n            key={n.id}\n            node={n}\n            level={0}\n            onFocus={onFocus}\n            focusedNodeId={focusedNodeId}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}