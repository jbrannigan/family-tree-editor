{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [focusedNode, setFocusedNode] = useState(null);\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Parse error:\", err);\n    }\n  }, [treeText]);\n  const handleFileLoad = text => setTreeText(text);\n  const handleFocus = node => setFocusedNode(node);\n  const handleUnfocus = () => setFocusedNode(null);\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"McGinty Family Tree Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n          onLoad: handleFileLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: treeText,\n          onChange: e => setTreeText(e.target.value),\n          rows: 30,\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          onUnfocus: handleUnfocus,\n          focusedNodeId: focusedNode ? focusedNode.id : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n      treeData: treeData,\n      treeText: treeText,\n      htmlContent: generateHTML(treeData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7Qq5a6kVu8lPU7v9C4sm+avRsJA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","UploadButton","DownloadButtons","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","focusedNode","setFocusedNode","parsed","err","console","error","handleFileLoad","text","handleFocus","node","handleUnfocus","displayedTree","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","flex","onLoad","value","onChange","e","target","rows","width","tree","onFocus","onUnfocus","focusedNodeId","id","htmlContent","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButtons from \"./DownloadButtons\";\r\nimport { parseTree} from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\n\r\nconst App = () => {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [focusedNode, setFocusedNode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Parse error:\", err);\r\n    }\r\n  }, [treeText]);\r\n\r\n  const handleFileLoad = (text) => setTreeText(text);\r\n\r\n  const handleFocus = (node) => setFocusedNode(node);\r\n  const handleUnfocus = () => setFocusedNode(null);\r\n\r\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\r\n\r\n  return (\r\n    <div className=\"App\" style={{ padding: \"1rem\" }}>\r\n      <h2>McGinty Family Tree Editor</h2>\r\n      <div style={{ display: \"flex\", gap: \"1rem\" }}>\r\n        <div style={{ flex: 1 }}>\r\n          <UploadButton onLoad={handleFileLoad} />\r\n          <textarea\r\n            value={treeText}\r\n            onChange={(e) => setTreeText(e.target.value)}\r\n            rows={30}\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <TreeView\r\n            tree={displayedTree}\r\n            onFocus={handleFocus}\r\n            onUnfocus={handleUnfocus}\r\n            focusedNodeId={focusedNode ? focusedNode.id : null}\r\n          />\r\n        </div>\r\n        <div style={{ flex: 1 }}>\r\n          <GraphView tree={displayedTree} />\r\n        </div>\r\n      </div>\r\n      <DownloadButtons\r\n        treeData={treeData}\r\n        treeText={treeText}\r\n        htmlContent={generateHTML(treeData)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}