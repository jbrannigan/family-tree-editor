{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus\n}) => {\n  _s();\n  const [collapsed, setCollapsed] = React.useState(false);\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleCollapse,\n      style: {\n        cursor: \"pointer\",\n        fontWeight: \"bold\"\n      },\n      children: [node.children && node.children.length > 0 ? collapsed ? \"▶\" : \"▼\" : \"•\", \" \", node.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFocus(node),\n      style: {\n        marginLeft: \"10px\"\n      },\n      children: \"Focus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), !collapsed && node.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map((child, idx) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus\n}) => {\n  if (!tree || tree.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No tree data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 42\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View (Collapsible)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tree.map((node, idx) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        onFocus: onFocus\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TreeNode","node","onFocus","_s","collapsed","setCollapsed","useState","toggleCollapse","children","onClick","style","cursor","fontWeight","length","name","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","map","child","idx","_c","TreeView","tree","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React from \"react\";\r\n\r\nconst TreeNode = ({ node, onFocus }) => {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n\r\n  const toggleCollapse = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <span onClick={toggleCollapse} style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\r\n        {node.children && node.children.length > 0 ? (collapsed ? \"▶\" : \"▼\") : \"•\"}{\" \"}\r\n        {node.name}\r\n      </span>\r\n      <button onClick={() => onFocus(node)} style={{ marginLeft: \"10px\" }}>\r\n        Focus\r\n      </button>\r\n      {!collapsed && node.children && (\r\n        <ul>\r\n          {node.children.map((child, idx) => (\r\n            <TreeNode key={idx} node={child} onFocus={onFocus} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus }) => {\r\n  if (!tree || tree.length === 0) return <div>No tree data available</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tree View (Collapsible)</h3>\r\n      <ul>\r\n        {tree.map((node, idx) => (\r\n          <TreeNode key={idx} node={node} onFocus={onFocus} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}