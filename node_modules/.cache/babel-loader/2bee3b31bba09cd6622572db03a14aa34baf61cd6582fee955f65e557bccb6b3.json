{"ast":null,"code":"export function parseTree(text) {\n  const lines = text.split('\\n').filter(line => line.trim() !== '');\n  const root = {\n    name: 'Root',\n    children: []\n  };\n  const stack = [{\n    level: -1,\n    node: root\n  }];\n  for (const line of lines) {\n    const match = line.match(/^(\\t*)(.*)$/);\n    const level = match[1].length;\n    const name = match[2].trim();\n    const newNode = {\n      name,\n      children: []\n    };\n    while (stack.length > 0 && stack[stack.length - 1].level >= level) {\n      stack.pop();\n    }\n    const parent = stack[stack.length - 1].node;\n    parent.children.push(newNode);\n    stack.push({\n      level,\n      node: newNode\n    });\n  }\n  return root.children.length === 1 ? root.children[0] : root;\n}","map":{"version":3,"names":["parseTree","text","lines","split","filter","line","trim","root","name","children","stack","level","node","match","length","newNode","pop","parent","push"],"sources":["/home/jbrannigan/src/familytree/src/utils/parseTree.js"],"sourcesContent":["export function parseTree(text) {\r\n  const lines = text.split('\\n').filter(line => line.trim() !== '');\r\n  const root = { name: 'Root', children: [] };\r\n  const stack = [{ level: -1, node: root }];\r\n\r\n  for (const line of lines) {\r\n    const match = line.match(/^(\\t*)(.*)$/);\r\n    const level = match[1].length;\r\n    const name = match[2].trim();\r\n\r\n    const newNode = { name, children: [] };\r\n\r\n    while (stack.length > 0 && stack[stack.length - 1].level >= level) {\r\n      stack.pop();\r\n    }\r\n\r\n    const parent = stack[stack.length - 1].node;\r\n    parent.children.push(newNode);\r\n    stack.push({ level, node: newNode });\r\n  }\r\n\r\n  return root.children.length === 1 ? root.children[0] : root;\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,SAASA,CAACC,IAAI,EAAE;EAC9B,MAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;EACjE,MAAMC,IAAI,GAAG;IAAEC,IAAI,EAAE,MAAM;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAC3C,MAAMC,KAAK,GAAG,CAAC;IAAEC,KAAK,EAAE,CAAC,CAAC;IAAEC,IAAI,EAAEL;EAAK,CAAC,CAAC;EAEzC,KAAK,MAAMF,IAAI,IAAIH,KAAK,EAAE;IACxB,MAAMW,KAAK,GAAGR,IAAI,CAACQ,KAAK,CAAC,aAAa,CAAC;IACvC,MAAMF,KAAK,GAAGE,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM;IAC7B,MAAMN,IAAI,GAAGK,KAAK,CAAC,CAAC,CAAC,CAACP,IAAI,CAAC,CAAC;IAE5B,MAAMS,OAAO,GAAG;MAAEP,IAAI;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAEtC,OAAOC,KAAK,CAACI,MAAM,GAAG,CAAC,IAAIJ,KAAK,CAACA,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,CAACH,KAAK,IAAIA,KAAK,EAAE;MACjED,KAAK,CAACM,GAAG,CAAC,CAAC;IACb;IAEA,MAAMC,MAAM,GAAGP,KAAK,CAACA,KAAK,CAACI,MAAM,GAAG,CAAC,CAAC,CAACF,IAAI;IAC3CK,MAAM,CAACR,QAAQ,CAACS,IAAI,CAACH,OAAO,CAAC;IAC7BL,KAAK,CAACQ,IAAI,CAAC;MAAEP,KAAK;MAAEC,IAAI,EAAEG;IAAQ,CAAC,CAAC;EACtC;EAEA,OAAOR,IAAI,CAACE,QAAQ,CAACK,MAAM,KAAK,CAAC,GAAGP,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,GAAGF,IAAI;AAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}