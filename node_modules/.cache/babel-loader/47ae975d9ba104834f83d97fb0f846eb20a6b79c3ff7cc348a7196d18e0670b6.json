{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\";\n// TreeView.js\nimport React from \"react\";\nimport \"./TreeView.css\"; // We’ll add styles here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus,\n  onUnfocus,\n  focusedNodeId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), focusedNodeId === node.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onUnfocus,\n        children: \"Unfocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onFocus(node),\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus,\n        onUnfocus: onUnfocus,\n        focusedNodeId: focusedNodeId\n      }, child.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus,\n  onUnfocus,\n  focusedNodeId\n}) => {\n  if (!tree || tree.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  const nodes = Array.isArray(tree) ? tree : [tree];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View (Collapsible)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tree-root\",\n      children: nodes.map((node, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        onFocus: onFocus,\n        onUnfocus: onUnfocus,\n        focusedNodeId: focusedNodeId\n      }, node.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TreeNode","node","onFocus","onUnfocus","focusedNodeId","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","length","map","child","index","_c","TreeView","tree","nodes","Array","isArray","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React from \"react\";\r\nimport \"./TreeView.css\"; // We’ll add styles here\r\n\r\nconst TreeNode = ({ node, onFocus, onUnfocus, focusedNodeId }) => {\r\n  return (\r\n    <li className=\"tree-node\">\r\n      <div className=\"node-box\">\r\n        <span>{node.name}</span>\r\n        {focusedNodeId === node.id ? (\r\n          <button onClick={onUnfocus}>Unfocus</button>\r\n        ) : (\r\n          <button onClick={() => onFocus(node)}>Focus</button>\r\n        )}\r\n      </div>\r\n      {node.children && node.children.length > 0 && (\r\n        <ul>\r\n          {node.children.map((child, index) => (\r\n            <TreeNode\r\n              key={child.id || index}\r\n              node={child}\r\n              onFocus={onFocus}\r\n              onUnfocus={onUnfocus}\r\n              focusedNodeId={focusedNodeId}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus, onUnfocus, focusedNodeId }) => {\r\n  if (!tree || tree.length === 0) {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  const nodes = Array.isArray(tree) ? tree : [tree];\r\n\r\n  return (\r\n    <div className=\"tree-view\">\r\n      <h3>Tree View (Collapsible)</h3>\r\n      <ul className=\"tree-root\">\r\n        {nodes.map((node, index) => (\r\n          <TreeNode\r\n            key={node.id || index}\r\n            node={node}\r\n            onFocus={onFocus}\r\n            onUnfocus={onUnfocus}\r\n            focusedNodeId={focusedNodeId}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}