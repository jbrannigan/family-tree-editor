{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\";\n// TreeView.js\nimport React, { useState } from \"react\";\nimport { FaSearchPlus, FaSearchMinus } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Row = ({\n  children,\n  level\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: 8,\n    marginLeft: level * 20,\n    lineHeight: 1.4,\n    padding: \"2px 0\",\n    whiteSpace: \"nowrap\"\n  },\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = Row;\nconst Toggle = ({\n  onClick,\n  isExpanded,\n  visible\n}) => {\n  if (!visible) return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      width: 16\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 24\n  }, this); // spacer\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: onClick,\n    title: isExpanded ? \"Collapse\" : \"Expand\",\n    style: {\n      cursor: \"pointer\",\n      width: 16,\n      display: \"inline-block\",\n      userSelect: \"none\"\n    },\n    children: isExpanded ? \"▼\" : \"▶\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Toggle;\nconst TreeNode = ({\n  node,\n  level = 0,\n  onFocus,\n  onUnfocus,\n  focusedNodeId,\n  expandedNodes,\n  toggleNode\n}) => {\n  var _expandedNodes$node$i;\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\n  const isFocused = focusedNodeId === node.id;\n  const isExpanded = (_expandedNodes$node$i = expandedNodes[node.id]) !== null && _expandedNodes$node$i !== void 0 ? _expandedNodes$node$i : true;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      level: level,\n      children: [/*#__PURE__*/_jsxDEV(Toggle, {\n        visible: hasChildren,\n        isExpanded: isExpanded,\n        onClick: () => {\n          var _node$id;\n          return toggleNode((_node$id = node.id) !== null && _node$id !== void 0 ? _node$id : node.name);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          flex: 0\n        },\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: isFocused ? \"Unfocus\" : \"Focus\",\n        onClick: () => isFocused ? onUnfocus() : onFocus(node),\n        style: {\n          background: \"none\",\n          border: \"none\",\n          cursor: \"pointer\",\n          padding: 0,\n          marginLeft: 8,\n          opacity: 0.8\n        },\n        children: isFocused ? /*#__PURE__*/_jsxDEV(FaSearchMinus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaSearchPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: node.children.map((child, idx) => {\n        var _child$id, _node$id2;\n        return /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: child,\n          level: level + 1,\n          onFocus: onFocus,\n          onUnfocus: onUnfocus,\n          focusedNodeId: focusedNodeId,\n          expandedNodes: expandedNodes,\n          toggleNode: toggleNode\n        }, (_child$id = child.id) !== null && _child$id !== void 0 ? _child$id : `${(_node$id2 = node.id) !== null && _node$id2 !== void 0 ? _node$id2 : node.name}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TreeNode;\nexport default function TreeView({\n  tree,\n  onFocus,\n  onUnfocus,\n  focusedNodeId,\n  expandedNodes,\n  toggleNode\n}) {\n  if (!tree) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No tree data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 21\n  }, this);\n  const nodes = Array.isArray(tree) ? tree : [tree];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      minWidth: 600\n    },\n    children: nodes.map((node, idx) => {\n      var _node$id3;\n      return /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        level: 0,\n        onFocus: onFocus,\n        onUnfocus: onUnfocus,\n        focusedNodeId: focusedNodeId,\n        expandedNodes: expandedNodes,\n        toggleNode: toggleNode\n      }, (_node$id3 = node.id) !== null && _node$id3 !== void 0 ? _node$id3 : `${node.name}-${idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_c4 = TreeView;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Toggle\");\n$RefreshReg$(_c3, \"TreeNode\");\n$RefreshReg$(_c4, \"TreeView\");","map":{"version":3,"names":["React","useState","FaSearchPlus","FaSearchMinus","jsxDEV","_jsxDEV","Row","children","level","style","display","alignItems","gap","marginLeft","lineHeight","padding","whiteSpace","fileName","_jsxFileName","lineNumber","columnNumber","_c","Toggle","onClick","isExpanded","visible","width","title","cursor","userSelect","_c2","TreeNode","node","onFocus","onUnfocus","focusedNodeId","expandedNodes","toggleNode","_expandedNodes$node$i","hasChildren","Array","isArray","length","isFocused","id","_node$id","name","flex","background","border","opacity","map","child","idx","_child$id","_node$id2","_c3","TreeView","tree","nodes","minWidth","_node$id3","_c4","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React, { useState } from \"react\";\r\nimport { FaSearchPlus, FaSearchMinus } from \"react-icons/fa\";\r\n\r\nconst Row = ({ children, level }) => (\r\n  <div\r\n    style={{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      gap: 8,\r\n      marginLeft: level * 20,\r\n      lineHeight: 1.4,\r\n      padding: \"2px 0\",\r\n      whiteSpace: \"nowrap\",\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst Toggle = ({ onClick, isExpanded, visible }) => {\r\n  if (!visible) return <span style={{ width: 16 }} />; // spacer\r\n  return (\r\n    <span\r\n      onClick={onClick}\r\n      title={isExpanded ? \"Collapse\" : \"Expand\"}\r\n      style={{ cursor: \"pointer\", width: 16, display: \"inline-block\", userSelect: \"none\" }}\r\n    >\r\n      {isExpanded ? \"▼\" : \"▶\"}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst TreeNode = ({\r\n  node,\r\n  level = 0,\r\n  onFocus,\r\n  onUnfocus,\r\n  focusedNodeId,\r\n  expandedNodes,\r\n  toggleNode,\r\n}) => {\r\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\r\n  const isFocused = focusedNodeId === node.id;\r\n  const isExpanded = expandedNodes[node.id] ?? true;\r\n\r\n  return (\r\n    <div>\r\n      <Row level={level}>\r\n        <Toggle\r\n          visible={hasChildren}\r\n          isExpanded={isExpanded}\r\n          onClick={() => toggleNode(node.id ?? node.name)}\r\n        />\r\n\r\n        {/* the text grows, keeping the icon tight to the right of it */}\r\n        <span style={{ flex: 0 }}>{node.name}</span>\r\n\r\n        <button\r\n          title={isFocused ? \"Unfocus\" : \"Focus\"}\r\n          onClick={() => (isFocused ? onUnfocus() : onFocus(node))}\r\n          style={{\r\n            background: \"none\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            padding: 0,\r\n            marginLeft: 8,\r\n            opacity: 0.8,\r\n          }}\r\n        >\r\n          {isFocused ? <FaSearchMinus /> : <FaSearchPlus />}\r\n        </button>\r\n      </Row>\r\n\r\n      {/* IMPORTANT: show children even when focused; siblings are hidden by App by passing [focusedNode] */}\r\n      {hasChildren && isExpanded && (\r\n        <div>\r\n          {node.children.map((child, idx) => (\r\n            <TreeNode\r\n              key={child.id ?? `${node.id ?? node.name}-${idx}`}\r\n              node={child}\r\n              level={level + 1}\r\n              onFocus={onFocus}\r\n              onUnfocus={onUnfocus}\r\n              focusedNodeId={focusedNodeId}\r\n              expandedNodes={expandedNodes}\r\n              toggleNode={toggleNode}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TreeView({ tree, onFocus, onUnfocus, focusedNodeId, expandedNodes, toggleNode }) {\r\n  if (!tree) return <div>No tree data available</div>;\r\n  const nodes = Array.isArray(tree) ? tree : [tree];\r\n\r\n  return (\r\n    <div style={{ padding: 10, minWidth: 600 }}>\r\n      {nodes.map((node, idx) => (\r\n        <TreeNode\r\n          key={node.id ?? `${node.name}-${idx}`}\r\n          node={node}\r\n          level={0}\r\n          onFocus={onFocus}\r\n          onUnfocus={onUnfocus}\r\n          focusedNodeId={focusedNodeId}\r\n          expandedNodes={expandedNodes}\r\n          toggleNode={toggleNode}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}