{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [focusedNode, setFocusedNode] = useState(null);\n  const [expandedNodes, setExpandedNodes] = useState({}); // NEW state for expand/collapse\n  const [view, setView] = useState(\"tree\");\n\n  // Parse tree text into JSON\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Error parsing tree:\", err);\n    }\n  }, [treeText]);\n\n  // Toggle expand/collapse\n  const toggleNode = id => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n\n  // Handlers\n  const handleTextChange = e => setTreeText(e.target.value);\n  const handleFileLoad = text => setTreeText(text);\n  const handleFocus = node => {\n    setFocusedNode(node);\n  };\n  const handleUnfocus = () => {\n    setFocusedNode(null);\n  };\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n\n  // Download handlers\n  const handleDownloadHTML = () => {\n    const htmlContent = generateHTML(treeData);\n    const blob = new Blob([htmlContent], {\n      type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"tree.html\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadJSON = () => {\n    const jsonContent = JSON.stringify(treeData, null, 2);\n    const blob = new Blob([jsonContent], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"tree.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadSVG = () => {\n    const svgElement = document.querySelector(\"#svg-tree\");\n    if (!svgElement) return;\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(svgElement);\n    const blob = new Blob([svgString], {\n      type: \"image/svg+xml\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"tree.svg\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        style: {\n          width: \"50%\",\n          height: \"100%\"\n        },\n        value: treeText,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), view === \"tree\" && /*#__PURE__*/_jsxDEV(TreeView, {\n        tree: displayedTree,\n        onFocus: handleFocus,\n        onUnfocus: handleUnfocus,\n        focusedNodeId: focusedNode ? focusedNode.id : null,\n        expandedNodes: expandedNodes,\n        toggleNode: toggleNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), view === \"graph\" && /*#__PURE__*/_jsxDEV(GraphView, {\n        tree: treeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"10px\",\n        borderTop: \"1px solid #ccc\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView(\"tree\"),\n        children: \"Tree View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setView(\"graph\"),\n        children: \"SVG View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n        onDownloadHTML: handleDownloadHTML,\n        onDownloadSVG: handleDownloadSVG,\n        onDownloadJSON: handleDownloadJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KBx/qWiIFb9J0nVuC6s2sT/paZE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","DownloadButtons","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","focusedNode","setFocusedNode","expandedNodes","setExpandedNodes","view","setView","parsed","err","console","error","toggleNode","id","prev","handleTextChange","e","target","value","handleFileLoad","text","handleFocus","node","handleUnfocus","displayedTree","handleDownloadHTML","htmlContent","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDownloadJSON","jsonContent","JSON","stringify","handleDownloadSVG","svgElement","querySelector","serializer","XMLSerializer","svgString","serializeToString","className","style","display","flexDirection","height","children","flex","width","onChange","fileName","_jsxFileName","lineNumber","columnNumber","tree","onFocus","onUnfocus","focusedNodeId","padding","borderTop","onClick","onDownloadHTML","onDownloadSVG","onDownloadJSON","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport DownloadButtons from \"./DownloadButtons\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\n\r\nexport default function App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [focusedNode, setFocusedNode] = useState(null);\r\n  const [expandedNodes, setExpandedNodes] = useState({}); // NEW state for expand/collapse\r\n  const [view, setView] = useState(\"tree\");\r\n\r\n  // Parse tree text into JSON\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Error parsing tree:\", err);\r\n    }\r\n  }, [treeText]);\r\n\r\n  // Toggle expand/collapse\r\n  const toggleNode = (id) => {\r\n    setExpandedNodes((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id],\r\n    }));\r\n  };\r\n\r\n  // Handlers\r\n  const handleTextChange = (e) => setTreeText(e.target.value);\r\n  const handleFileLoad = (text) => setTreeText(text);\r\n\r\n  const handleFocus = (node) => {\r\n    setFocusedNode(node);\r\n  };\r\n\r\n  const handleUnfocus = () => {\r\n    setFocusedNode(null);\r\n  };\r\n\r\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\r\n\r\n  // Download handlers\r\n  const handleDownloadHTML = () => {\r\n    const htmlContent = generateHTML(treeData);\r\n    const blob = new Blob([htmlContent], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"tree.html\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDownloadJSON = () => {\r\n    const jsonContent = JSON.stringify(treeData, null, 2);\r\n    const blob = new Blob([jsonContent], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"tree.json\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDownloadSVG = () => {\r\n    const svgElement = document.querySelector(\"#svg-tree\");\r\n    if (!svgElement) return;\r\n\r\n    const serializer = new XMLSerializer();\r\n    const svgString = serializer.serializeToString(svgElement);\r\n    const blob = new Blob([svgString], { type: \"image/svg+xml\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"tree.svg\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\" }}>\r\n      {/* Top panel with text input and tree */}\r\n      <div style={{ display: \"flex\", flex: 1 }}>\r\n        <textarea\r\n          style={{ width: \"50%\", height: \"100%\" }}\r\n          value={treeText}\r\n          onChange={handleTextChange}\r\n        />\r\n        {view === \"tree\" && (\r\n          <TreeView\r\n            tree={displayedTree}\r\n            onFocus={handleFocus}\r\n            onUnfocus={handleUnfocus}\r\n            focusedNodeId={focusedNode ? focusedNode.id : null}\r\n            expandedNodes={expandedNodes}\r\n            toggleNode={toggleNode}\r\n          />\r\n        )}\r\n        {view === \"graph\" && <GraphView tree={treeData} />}\r\n      </div>\r\n\r\n      {/* Bottom panel with controls */}\r\n      <div style={{ padding: \"10px\", borderTop: \"1px solid #ccc\" }}>\r\n        <button onClick={() => setView(\"tree\")}>Tree View</button>\r\n        <button onClick={() => setView(\"graph\")}>SVG View</button>\r\n        <DownloadButtons\r\n          onDownloadHTML={handleDownloadHTML}\r\n          onDownloadSVG={handleDownloadSVG}\r\n          onDownloadJSON={handleDownloadJSON}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}