{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TreeNode({\n  node\n}) {\n  _s();\n  const [expanded, setExpanded] = useState(true);\n  const hasChildren = node.children && node.children.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-btn\",\n      onClick: () => hasChildren && setExpanded(!expanded),\n      children: [hasChildren && (expanded ? \"▼\" : \"▶\"), \" \", node.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), expanded && hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children\",\n      children: node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeNode, \"NZEs4N34I2vU569ODzuIjdsqMlo=\");\n_c = TreeNode;\nfunction TreeView({\n  data\n}) {\n  if (!data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-view\",\n    children: \"No tree data to display.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  //DEBUG\n  console.log(\"Rendering tree view with:\", treeData);\n  //DEBUG\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Collapsible Tree View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TreeNode, {\n      node: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","_s","expanded","setExpanded","hasChildren","children","length","className","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","map","child","index","_c","TreeView","data","console","log","treeData","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TreeNode({ node }) {\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  const hasChildren = node.children && node.children.length > 0;\r\n\r\n  return (\r\n    <div className=\"tree-node\">\r\n      <div\r\n        className=\"toggle-btn\"\r\n        onClick={() => hasChildren && setExpanded(!expanded)}\r\n      >\r\n        {hasChildren && (expanded ? \"▼\" : \"▶\")} {node.name}\r\n      </div>\r\n      {expanded && hasChildren && (\r\n        <div className=\"children\">\r\n          {node.children.map((child, index) => (\r\n            <TreeNode key={index} node={child} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TreeView({ data }) {\r\n  if (!data) return <div className=\"tree-view\">No tree data to display.</div>;\r\n//DEBUG\r\nconsole.log(\"Rendering tree view with:\", treeData);\r\n//DEBUG\r\n  return (\r\n    <div className=\"tree-view\">\r\n      <h2>Collapsible Tree View</h2>\r\n      <TreeNode node={data} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMQ,WAAW,GAAGJ,IAAI,CAACK,QAAQ,IAAIL,IAAI,CAACK,QAAQ,CAACC,MAAM,GAAG,CAAC;EAE7D,oBACER,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAF,QAAA,gBACxBP,OAAA;MACES,SAAS,EAAC,YAAY;MACtBC,OAAO,EAAEA,CAAA,KAAMJ,WAAW,IAAID,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAG,QAAA,GAEpDD,WAAW,KAAKF,QAAQ,GAAG,GAAG,GAAG,GAAG,CAAC,EAAC,GAAC,EAACF,IAAI,CAACS,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,EACLX,QAAQ,IAAIE,WAAW,iBACtBN,OAAA;MAAKS,SAAS,EAAC,UAAU;MAAAF,QAAA,EACtBL,IAAI,CAACK,QAAQ,CAACS,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC9BlB,OAAA,CAACC,QAAQ;QAAaC,IAAI,EAAEe;MAAM,GAAnBC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACZ,EAAA,CAtBQF,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AAwBjB,SAASmB,QAAQA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAC1B,IAAI,CAACA,IAAI,EAAE,oBAAOrB,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAF,QAAA,EAAC;EAAwB;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC7E;EACAO,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,QAAQ,CAAC;EAClD;EACE,oBACExB,OAAA;IAAKS,SAAS,EAAC,WAAW;IAAAF,QAAA,gBACxBP,OAAA;MAAAO,QAAA,EAAI;IAAqB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9Bf,OAAA,CAACC,QAAQ;MAACC,IAAI,EAAEmB;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV;AAACU,GAAA,GAXQL,QAAQ;AAajB,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}