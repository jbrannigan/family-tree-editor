{"ast":null,"code":"// UploadButton.js\nimport React,{useRef}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function UploadButton(_ref){let{onLoad}=_ref;const inputRef=useRef(null);const openPicker=()=>{// Guard in case something steals focus or the ref isn't ready yet\nif(inputRef.current)inputRef.current.click();};const handleChange=e=>{var _e$target$files;const file=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0];if(!file)return;const reader=new FileReader();reader.onload=()=>{if(typeof onLoad===\"function\")onLoad(String(reader.result||\"\"));// reset so picking the same file again still fires change\ne.target.value=\"\";};reader.readAsText(file);};return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"inline-flex\",gap:8,alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:openPicker,children:\"Choose File\"}),/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"file\",accept:\".txt\",onChange:handleChange,style:{display:\"none\"}})]});}","map":{"version":3,"names":["React","useRef","jsx","_jsx","jsxs","_jsxs","UploadButton","_ref","onLoad","inputRef","openPicker","current","click","handleChange","e","_e$target$files","file","target","files","reader","FileReader","onload","String","result","value","readAsText","style","display","gap","alignItems","children","type","onClick","ref","accept","onChange"],"sources":["/home/jbrannigan/src/familytree/src/UploadButton.js"],"sourcesContent":["// UploadButton.js\r\nimport React, { useRef } from \"react\";\r\n\r\nexport default function UploadButton({ onLoad }) {\r\n  const inputRef = useRef(null);\r\n\r\n  const openPicker = () => {\r\n    // Guard in case something steals focus or the ref isn't ready yet\r\n    if (inputRef.current) inputRef.current.click();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (typeof onLoad === \"function\") onLoad(String(reader.result || \"\"));\r\n      // reset so picking the same file again still fires change\r\n      e.target.value = \"\";\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"inline-flex\", gap: 8, alignItems: \"center\" }}>\r\n      <button type=\"button\" onClick={openPicker}>\r\n        Choose File\r\n      </button>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        accept=\".txt\"\r\n        onChange={handleChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,cAAe,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAa,IAAZ,CAAEC,MAAO,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAAAE,QAAQ,CAAGR,MAAM,CAAC,IAAI,CAAC,CAE7B,KAAM,CAAAS,UAAU,CAAGA,CAAA,GAAM,CACvB;AACA,GAAID,QAAQ,CAACE,OAAO,CAAEF,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,CAChD,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIC,CAAC,EAAK,KAAAC,eAAA,CAC1B,KAAM,CAAAC,IAAI,EAAAD,eAAA,CAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,UAAAH,eAAA,iBAAdA,eAAA,CAAiB,CAAC,CAAC,CAChC,GAAI,CAACC,IAAI,CAAE,OACX,KAAM,CAAAG,MAAM,CAAG,GAAI,CAAAC,UAAU,CAAC,CAAC,CAC/BD,MAAM,CAACE,MAAM,CAAG,IAAM,CACpB,GAAI,MAAO,CAAAb,MAAM,GAAK,UAAU,CAAEA,MAAM,CAACc,MAAM,CAACH,MAAM,CAACI,MAAM,EAAI,EAAE,CAAC,CAAC,CACrE;AACAT,CAAC,CAACG,MAAM,CAACO,KAAK,CAAG,EAAE,CACrB,CAAC,CACDL,MAAM,CAACM,UAAU,CAACT,IAAI,CAAC,CACzB,CAAC,CAED,mBACEX,KAAA,QAAKqB,KAAK,CAAE,CAAEC,OAAO,CAAE,aAAa,CAAEC,GAAG,CAAE,CAAC,CAAEC,UAAU,CAAE,QAAS,CAAE,CAAAC,QAAA,eACnE3B,IAAA,WAAQ4B,IAAI,CAAC,QAAQ,CAACC,OAAO,CAAEtB,UAAW,CAAAoB,QAAA,CAAC,aAE3C,CAAQ,CAAC,cACT3B,IAAA,UACE8B,GAAG,CAAExB,QAAS,CACdsB,IAAI,CAAC,MAAM,CACXG,MAAM,CAAC,MAAM,CACbC,QAAQ,CAAEtB,YAAa,CACvBa,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAC5B,CAAC,EACC,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}