{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from \"react\";\nimport TreeEditor from \"./TreeEditor\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState(null);\n  const [displayedTree, setDisplayedTree] = useState(null);\n  const [focusedNode, setFocusedNode] = useState(null);\n  const handleFileLoad = text => {\n    setTreeText(text);\n    try {\n      const parsed = parseTree(text);\n      setTreeData([parsed]);\n      //    setDisplayedTree(parsed);\n      setDisplayedTree([parsed]);\n      setFocusedNode(null);\n      console.log(\"Parsed tree:\", parsed);\n    } catch (error) {\n      console.error(\"Failed to parse tree:\", error);\n    }\n  };\n  const downloadJSON = tree => {\n    const blob = new Blob([JSON.stringify(tree, null, 2)], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    triggerDownload(url, \"tree.json\");\n  };\n  const downloadHTML = tree => {\n    const html = generateHTML(tree);\n    const blob = new Blob([html], {\n      type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    triggerDownload(url, \"tree.html\");\n  };\n  const downloadSVG = tree => {\n    const svgPlaceholder = \"<svg xmlns='http://www.w3.org/2000/svg'><text x='10' y='20'>SVG export coming soon</text></svg>\";\n    const blob = new Blob([svgPlaceholder], {\n      type: \"image/svg+xml\"\n    });\n    const url = URL.createObjectURL(blob);\n    triggerDownload(url, \"tree.svg\");\n  };\n  const triggerDownload = (url, filename) => {\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = filename;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleFocus = node => {\n    if (!node) {\n      setFocusedNode(null);\n      setDisplayedTree(treeData);\n    } else {\n      setFocusedNode(node);\n      setDisplayedTree([node]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"McGinty Family Tree Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n      onLoad: handleFileLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadHTML(displayedTree),\n        children: \"Download HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadSVG(displayedTree),\n        children: \"Download SVG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => downloadJSON(displayedTree),\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-view\",\n      children: [/*#__PURE__*/_jsxDEV(TreeEditor, {\n        treeText: treeText,\n        setTreeText: setTreeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-panel\",\n        children: displayedTree && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TreeView, {\n            tree: displayedTree,\n            onFocus: handleFocus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n            tree: displayedTree\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2eCHltH+QPQLlzAKklN32bGso58=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TreeEditor","TreeView","GraphView","UploadButton","parseTree","generateHTML","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","treeText","setTreeText","treeData","setTreeData","displayedTree","setDisplayedTree","focusedNode","setFocusedNode","handleFileLoad","text","parsed","console","log","error","downloadJSON","tree","blob","Blob","JSON","stringify","type","url","URL","createObjectURL","triggerDownload","downloadHTML","html","downloadSVG","svgPlaceholder","filename","a","document","createElement","href","download","click","revokeObjectURL","handleFocus","node","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","style","marginBottom","onClick","onFocus","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState } from \"react\";\r\nimport TreeEditor from \"./TreeEditor\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState(null);\r\n  const [displayedTree, setDisplayedTree] = useState(null);\r\n  const [focusedNode, setFocusedNode] = useState(null);\r\n\r\n  const handleFileLoad = (text) => {\r\n    setTreeText(text);\r\n    try {\r\n      const parsed = parseTree(text);\r\n      setTreeData([parsed]);\r\n//    setDisplayedTree(parsed);\r\n      setDisplayedTree([parsed]);\r\n      setFocusedNode(null);\r\n      console.log(\"Parsed tree:\", parsed);\r\n    } catch (error) {\r\n      console.error(\"Failed to parse tree:\", error);\r\n    }\r\n  };\r\n\r\n  const downloadJSON = (tree) => {\r\n    const blob = new Blob([JSON.stringify(tree, null, 2)], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    triggerDownload(url, \"tree.json\");\r\n  };\r\n\r\n  const downloadHTML = (tree) => {\r\n    const html = generateHTML(tree);\r\n    const blob = new Blob([html], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n    triggerDownload(url, \"tree.html\");\r\n  };\r\n\r\nconst downloadSVG = (tree) => {\r\n  const svgPlaceholder = \"<svg xmlns='http://www.w3.org/2000/svg'><text x='10' y='20'>SVG export coming soon</text></svg>\";\r\n  const blob = new Blob([svgPlaceholder], { type: \"image/svg+xml\" });\r\n  const url = URL.createObjectURL(blob);\r\n  triggerDownload(url, \"tree.svg\");\r\n};\r\n\r\nconst triggerDownload = (url, filename) => {\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = filename;\r\n  a.click();\r\n  URL.revokeObjectURL(url);\r\n};\r\n\r\n  const handleFocus = (node) => {\r\n    if (!node) {\r\n      setFocusedNode(null);\r\n      setDisplayedTree(treeData);\r\n    } else {\r\n      setFocusedNode(node);\r\n      setDisplayedTree([node]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>McGinty Family Tree Editor</h1>\r\n      <UploadButton onLoad={handleFileLoad} />\r\n\r\n      <div style={{ marginBottom: \"1rem\" }}>\r\n        <button onClick={() => downloadHTML(displayedTree)}>Download HTML</button>\r\n        <button onClick={() => downloadSVG(displayedTree)}>Download SVG</button>\r\n        <button onClick={() => downloadJSON(displayedTree)}>Download JSON</button>\r\n      </div>\r\n\r\n      <div className=\"editor-view\">\r\n        <TreeEditor treeText={treeText} setTreeText={setTreeText} />\r\n        <div className=\"tree-panel\">\r\n          {displayedTree && (\r\n            <>\r\n              <TreeView tree={displayedTree} onFocus={handleFocus} />\r\n              <GraphView tree={displayedTree} />\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}