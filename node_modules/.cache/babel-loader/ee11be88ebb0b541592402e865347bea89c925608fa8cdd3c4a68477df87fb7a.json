{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport TreeEditor from \"./TreeEditor\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButton from \"./DownloadButton\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [pinnedId, setPinnedId] = useState(null);\n  const handleFileLoad = fileContent => {\n    setTreeText(fileContent);\n    try {\n      const parsed = parseTree(fileContent);\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Parsing failed:\", err);\n    }\n  };\n  const handleTextChange = text => {\n    setTreeText(text);\n    try {\n      const parsed = parseTree(text);\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Parsing failed:\", err);\n    }\n  };\n  const handleFocus = id => {\n    if (pinnedId === id) {\n      setPinnedId(null); // Unpin if already pinned\n    } else {\n      setPinnedId(id); // Pin the clicked node\n    }\n  };\n  const getDisplayedTree = () => {\n    if (!pinnedId) return treeData;\n    const findNodeById = (nodeList, id) => {\n      for (const node of nodeList) {\n        if (node.id === id) return node;\n        if (node.children) {\n          const found = findNodeById(node.children, id);\n          if (found) return found;\n        }\n      }\n      return null;\n    };\n    const pinned = findNodeById(treeData, pinnedId);\n    return pinned ? [pinned] : [];\n  };\n  const displayedTree = getDisplayedTree();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n        onLoad: handleFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        type: \"html\",\n        data: generateHTML(treeData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        type: \"json\",\n        data: JSON.stringify(treeData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        type: \"svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(TreeEditor, {\n        value: treeText,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-output\",\n        children: [/*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FFaxZdqNv6ZmMpdW/A5m5Ma9m8c=\");\n_c = App;\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 87,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createRoot","TreeEditor","TreeView","GraphView","UploadButton","DownloadButton","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","pinnedId","setPinnedId","handleFileLoad","fileContent","parsed","err","console","error","handleTextChange","text","handleFocus","id","getDisplayedTree","findNodeById","nodeList","node","children","found","pinned","displayedTree","className","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","type","data","JSON","stringify","value","onChange","tree","onFocus","_c","container","document","getElementById","root","render","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport TreeEditor from \"./TreeEditor\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [pinnedId, setPinnedId] = useState(null);\r\n\r\n  const handleFileLoad = (fileContent) => {\r\n    setTreeText(fileContent);\r\n    try {\r\n      const parsed = parseTree(fileContent);\r\n      setTreeData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Parsing failed:\", err);\r\n    }\r\n  };\r\n\r\n  const handleTextChange = (text) => {\r\n    setTreeText(text);\r\n    try {\r\n      const parsed = parseTree(text);\r\n      setTreeData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Parsing failed:\", err);\r\n    }\r\n  };\r\n\r\n  const handleFocus = (id) => {\r\n    if (pinnedId === id) {\r\n      setPinnedId(null); // Unpin if already pinned\r\n    } else {\r\n      setPinnedId(id);   // Pin the clicked node\r\n    }\r\n  };\r\n\r\n  const getDisplayedTree = () => {\r\n    if (!pinnedId) return treeData;\r\n\r\n    const findNodeById = (nodeList, id) => {\r\n      for (const node of nodeList) {\r\n        if (node.id === id) return node;\r\n        if (node.children) {\r\n          const found = findNodeById(node.children, id);\r\n          if (found) return found;\r\n        }\r\n      }\r\n      return null;\r\n    };\r\n\r\n    const pinned = findNodeById(treeData, pinnedId);\r\n    return pinned ? [pinned] : [];\r\n  };\r\n\r\n  const displayedTree = getDisplayedTree();\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"top-buttons\">\r\n        <UploadButton onLoad={handleFileLoad} />\r\n        <DownloadButton type=\"html\" data={generateHTML(treeData)} />\r\n        <DownloadButton type=\"json\" data={JSON.stringify(treeData, null, 2)} />\r\n        <DownloadButton type=\"svg\" />\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <TreeEditor value={treeText} onChange={handleTextChange} />\r\n        <div className=\"tree-output\">\r\n          <TreeView tree={displayedTree} onFocus={handleFocus} />\r\n          <GraphView tree={displayedTree} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst container = document.getElementById(\"root\");\r\nconst root = createRoot(container);\r\nroot.render(<App />);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}