{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React, { useState } from \"react\";\nimport { FaSearchPlus, FaSearchMinus } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  level = 0,\n  onFocus,\n  onUnfocus,\n  focusedNodeId,\n  expandedNodes,\n  toggleNode\n}) => {\n  var _expandedNodes$node$i;\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\n  const isFocused = focusedNodeId === node.id;\n  const isExpanded = (_expandedNodes$node$i = expandedNodes[node.id]) !== null && _expandedNodes$node$i !== void 0 ? _expandedNodes$node$i : true;\n  const indent = {\n    marginLeft: level * 20,\n    display: \"flex\",\n    alignItems: \"center\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: indent,\n      children: [hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => toggleNode(node.id),\n        style: {\n          cursor: \"pointer\",\n          width: 16\n        },\n        children: isExpanded ? \"▼\" : \"▶️\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), !hasChildren && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          width: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          paddingRight: 8\n        },\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: isFocused ? \"Unfocus\" : \"Focus\",\n        onClick: () => isFocused ? onUnfocus() : onFocus(node),\n        style: {\n          background: \"none\",\n          border: \"none\",\n          cursor: \"pointer\",\n          color: \"#444\"\n        },\n        children: isFocused ? /*#__PURE__*/_jsxDEV(FaSearchMinus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(FaSearchPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), hasChildren && isExpanded && !isFocused && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: node.children.map(child => {\n        var _child$id;\n        return /*#__PURE__*/_jsxDEV(TreeNode, {\n          node: child,\n          level: level + 1,\n          onFocus: onFocus,\n          onUnfocus: onUnfocus,\n          focusedNodeId: focusedNodeId,\n          expandedNodes: expandedNodes,\n          toggleNode: toggleNode\n        }, (_child$id = child.id) !== null && _child$id !== void 0 ? _child$id : `${node.id}-${child.name}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nexport default function TreeView({\n  tree,\n  onFocus,\n  onUnfocus,\n  focusedNodeId\n}) {\n  _s();\n  const [expandedNodes, setExpandedNodes] = useState({});\n  const toggleNode = id => {\n    setExpandedNodes(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  if (!tree) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No tree data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 21\n  }, this);\n  const nodes = Array.isArray(tree) ? tree : [tree];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 10,\n      minWidth: 600\n    },\n    children: nodes.map(node => {\n      var _node$id;\n      return /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        level: 0,\n        onFocus: onFocus,\n        onUnfocus: onUnfocus,\n        focusedNodeId: focusedNodeId,\n        expandedNodes: expandedNodes,\n        toggleNode: toggleNode\n      }, (_node$id = node.id) !== null && _node$id !== void 0 ? _node$id : node.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeView, \"FnQji8mxciD8ZbGhuj/np5gNXdg=\");\n_c2 = TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","FaSearchPlus","FaSearchMinus","jsxDEV","_jsxDEV","TreeNode","node","level","onFocus","onUnfocus","focusedNodeId","expandedNodes","toggleNode","_expandedNodes$node$i","hasChildren","Array","isArray","children","length","isFocused","id","isExpanded","indent","marginLeft","display","alignItems","style","onClick","cursor","width","fileName","_jsxFileName","lineNumber","columnNumber","paddingRight","name","title","background","border","color","map","child","_child$id","_c","TreeView","tree","_s","setExpandedNodes","prev","nodes","padding","minWidth","_node$id","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React, { useState } from \"react\";\r\nimport { FaSearchPlus, FaSearchMinus } from \"react-icons/fa\";\r\n\r\nconst TreeNode = ({\r\n  node,\r\n  level = 0,\r\n  onFocus,\r\n  onUnfocus,\r\n  focusedNodeId,\r\n  expandedNodes,\r\n  toggleNode\r\n}) => {\r\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\r\n  const isFocused = focusedNodeId === node.id;\r\n  const isExpanded = expandedNodes[node.id] ?? true;\r\n\r\n  const indent = { marginLeft: level * 20, display: \"flex\", alignItems: \"center\" };\r\n\r\n  return (\r\n    <div>\r\n      <div style={indent}>\r\n        {hasChildren && (\r\n          <span\r\n            onClick={() => toggleNode(node.id)}\r\n            style={{ cursor: \"pointer\", width: 16 }}\r\n          >\r\n            {isExpanded ? \"▼\" : \"▶️\"}\r\n          </span>\r\n        )}\r\n        {!hasChildren && <span style={{ width: 16 }} />} {/* spacer */}\r\n\r\n        <span style={{ paddingRight: 8 }}>{node.name}</span>\r\n\r\n        <button\r\n          title={isFocused ? \"Unfocus\" : \"Focus\"}\r\n          onClick={() => (isFocused ? onUnfocus() : onFocus(node))}\r\n          style={{\r\n            background: \"none\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            color: \"#444\"\r\n          }}\r\n        >\r\n          {isFocused ? <FaSearchMinus /> : <FaSearchPlus />}\r\n        </button>\r\n      </div>\r\n\r\n      {hasChildren && isExpanded && !isFocused && (\r\n        <div>\r\n          {node.children.map((child) => (\r\n            <TreeNode\r\n              key={child.id ?? `${node.id}-${child.name}`}\r\n              node={child}\r\n              level={level + 1}\r\n              onFocus={onFocus}\r\n              onUnfocus={onUnfocus}\r\n              focusedNodeId={focusedNodeId}\r\n              expandedNodes={expandedNodes}\r\n              toggleNode={toggleNode}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function TreeView({\r\n  tree,\r\n  onFocus,\r\n  onUnfocus,\r\n  focusedNodeId\r\n}) {\r\n  const [expandedNodes, setExpandedNodes] = useState({});\r\n\r\n  const toggleNode = (id) => {\r\n    setExpandedNodes((prev) => ({\r\n      ...prev,\r\n      [id]: !prev[id]\r\n    }));\r\n  };\r\n\r\n  if (!tree) return <div>No tree data available</div>;\r\n\r\n  const nodes = Array.isArray(tree) ? tree : [tree];\r\n\r\n  return (\r\n    <div style={{ padding: 10, minWidth: 600 }}>\r\n      {nodes.map((node) => (\r\n        <TreeNode\r\n          key={node.id ?? node.name}\r\n          node={node}\r\n          level={0}\r\n          onFocus={onFocus}\r\n          onUnfocus={onUnfocus}\r\n          focusedNodeId={focusedNodeId}\r\n          expandedNodes={expandedNodes}\r\n          toggleNode={toggleNode}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}