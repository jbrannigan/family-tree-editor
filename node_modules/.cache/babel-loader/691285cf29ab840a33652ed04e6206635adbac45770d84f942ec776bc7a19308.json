{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus,\n  focusedNodeId\n}) => {\n  _s();\n  const [collapsed, setCollapsed] = useState(false);\n  const isFocused = node.id === focusedNodeId;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCollapsed(!collapsed),\n        children: collapsed ? \"+\" : \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: \"1rem\"\n        },\n        onClick: () => onFocus(node),\n        disabled: isFocused,\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), !collapsed && node.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, node.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus,\n  focusedNodeId\n}) => {\n  if (!tree || !Array.isArray(tree) || tree.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View (Collapsible)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tree.map(node => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        onFocus: onFocus,\n        focusedNodeId: focusedNodeId\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","onFocus","focusedNodeId","_s","collapsed","setCollapsed","isFocused","id","children","length","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","style","marginLeft","disabled","map","child","_c","TreeView","tree","Array","isArray","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst TreeNode = ({ node, onFocus, focusedNodeId }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const isFocused = node.id === focusedNodeId;\r\n\r\n  return (\r\n    <li key={node.id}>\r\n      <div>\r\n        {node.children && node.children.length > 0 && (\r\n          <button onClick={() => setCollapsed(!collapsed)}>\r\n            {collapsed ? \"+\" : \"-\"}\r\n          </button>\r\n        )}\r\n        <strong>{node.name}</strong>\r\n        <button\r\n          style={{ marginLeft: \"1rem\" }}\r\n          onClick={() => onFocus(node)}\r\n          disabled={isFocused}\r\n        >\r\n          Focus\r\n        </button>\r\n      </div>\r\n      {!collapsed && node.children && (\r\n        <ul>\r\n          {node.children.map((child) => (\r\n            <TreeNode\r\n              key={child.id}\r\n              node={child}\r\n              onFocus={onFocus}\r\n              focusedNodeId={focusedNodeId}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus, focusedNodeId }) => {\r\n  if (!tree || !Array.isArray(tree) || tree.length === 0) {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tree View (Collapsible)</h3>\r\n      <ul>\r\n        {tree.map((node) => (\r\n          <TreeNode\r\n            key={node.id}\r\n            node={node}\r\n            onFocus={onFocus}\r\n            focusedNodeId={focusedNodeId}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}