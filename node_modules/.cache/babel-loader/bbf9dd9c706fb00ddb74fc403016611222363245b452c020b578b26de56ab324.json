{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./TreeEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TreeEditor({\n  treeText,\n  onTextChange\n}) {\n  _s();\n  const [softWrap, setSoftWrap] = useState(true);\n  const gutterRef = useRef(null);\n  const taRef = useRef(null);\n  const NL = \"\\n\";\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\n  const gutterLines = Array.from({\n    length: lineCount\n  }, (_, i) => i + 1);\n  const handleScroll = () => {\n    if (gutterRef.current && taRef.current) {\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\n    }\n  };\n  const updateCursorLine = () => {\n    const ta = taRef.current;\n    if (!ta) return;\n    const pos = typeof ta.selectionStart === \"number\" ? ta.selectionStart : 0;\n    const upto = treeText.slice(0, pos).split(NL).length;\n    setCursorLine(upto);\n  };\n  const [cursorLine, setCursorLine] = useState(1);\n  const handleKeyDown = e => {\n    if (e.key !== \"Tab\" || !taRef.current) return;\n    e.preventDefault();\n    const ta = taRef.current;\n    const selStart = ta.selectionStart;\n    const selEnd = ta.selectionEnd;\n    const text = treeText;\n    const lineStart = text.lastIndexOf(NL, selStart - 1) + 1;\n    const lineEnd = text.indexOf(NL, selEnd);\n    const sliceEnd = lineEnd === -1 ? text.length : lineEnd;\n    const before = text.slice(0, lineStart);\n    const middle = text.slice(lineStart, sliceEnd);\n    const after = text.slice(sliceEnd);\n    if (e.shiftKey) {\n      // outdent: remove one leading tab or up to 4 spaces per line\n      const out = middle.replace(/^(?:\\t| {1,4})/gm, \"\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(Math.max(selStart - 1, lineStart), Math.max(selEnd - 1, lineStart));\n      });\n    } else {\n      // indent: add one tab to each selected line\n      const lines = (middle.match(/\\n/g) || []).length + 1;\n      const out = middle.replace(/^/gm, \"\\t\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(selStart + 1, selEnd + lines);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tree-editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 8,\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          gap: 6\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: softWrap,\n          onChange: e => setSoftWrap(e.target.checked),\n          \"aria-label\": \"Soft wrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Soft wrap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: gutterRef,\n        className: \"te-gutter\",\n        \"aria-hidden\": \"true\",\n        children: gutterLines.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `te-line ${n === cursorLine ? \"active\" : \"\"}`,\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: taRef,\n        className: `te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`,\n        \"aria-label\": \"Family tree text editor\",\n        value: treeText,\n        onChange: e => onTextChange(e.target.value),\n        onScroll: handleScroll,\n        onClick: updateCursorLine,\n        onKeyUp: updateCursorLine,\n        onSelect: updateCursorLine,\n        onKeyDown: handleKeyDown,\n        spellCheck: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeEditor, \"AKrTjhE9/q5Ybj4ZgrKGd5guQYo=\");\n_c = TreeEditor;\nvar _c;\n$RefreshReg$(_c, \"TreeEditor\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","TreeEditor","treeText","onTextChange","_s","softWrap","setSoftWrap","gutterRef","taRef","NL","lineCount","Math","max","match","length","gutterLines","Array","from","_","i","handleScroll","current","scrollTop","updateCursorLine","ta","pos","selectionStart","upto","slice","split","setCursorLine","cursorLine","handleKeyDown","e","key","preventDefault","selStart","selEnd","selectionEnd","text","lineStart","lastIndexOf","lineEnd","indexOf","sliceEnd","before","middle","after","shiftKey","out","replace","requestAnimationFrame","setSelectionRange","lines","className","children","style","marginBottom","display","alignItems","gap","type","checked","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","n","value","onScroll","onClick","onKeyUp","onSelect","onKeyDown","spellCheck","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeEditor.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./TreeEditor.css\";\n\nexport default function TreeEditor({ treeText, onTextChange }) {\n  const [softWrap, setSoftWrap] = useState(true);\n  const gutterRef = useRef(null);\n  const taRef = useRef(null);\n\n  const NL = \"\\n\";\n\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\n  const gutterLines = Array.from({ length: lineCount }, (_, i) => i + 1);\n\n  const handleScroll = () => {\n    if (gutterRef.current && taRef.current) {\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\n    }\n  };\n\n  const updateCursorLine = () => {\n    const ta = taRef.current;\n    if (!ta) return;\n    const pos = typeof ta.selectionStart === \"number\" ? ta.selectionStart : 0;\n    const upto = treeText.slice(0, pos).split(NL).length;\n    setCursorLine(upto);\n  };\n\n  const [cursorLine, setCursorLine] = useState(1);\n\n  const handleKeyDown = (e) => {\n    if (e.key !== \"Tab\" || !taRef.current) return;\n    e.preventDefault();\n\n    const ta = taRef.current;\n    const selStart = ta.selectionStart;\n    const selEnd = ta.selectionEnd;\n\n    const text = treeText;\n    const lineStart = text.lastIndexOf(NL, selStart - 1) + 1;\n    const lineEnd = text.indexOf(NL, selEnd);\n    const sliceEnd = lineEnd === -1 ? text.length : lineEnd;\n\n    const before = text.slice(0, lineStart);\n    const middle = text.slice(lineStart, sliceEnd);\n    const after = text.slice(sliceEnd);\n\n    if (e.shiftKey) {\n      // outdent: remove one leading tab or up to 4 spaces per line\n      const out = middle.replace(/^(?:\\t| {1,4})/gm, \"\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(\n          Math.max(selStart - 1, lineStart),\n          Math.max(selEnd - 1, lineStart)\n        );\n      });\n    } else {\n      // indent: add one tab to each selected line\n      const lines = (middle.match(/\\n/g) || []).length + 1;\n      const out = middle.replace(/^/gm, \"\\t\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(selStart + 1, selEnd + lines);\n      });\n    }\n  };\n\n  return (\n    <div className=\"tree-editor\">\n      <div style={{ marginBottom: 8, display: \"flex\", alignItems: \"center\", gap: 8 }}>\n        <label style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6 }}>\n          <input\n            type=\"checkbox\"\n            checked={softWrap}\n            onChange={(e) => setSoftWrap(e.target.checked)}\n            aria-label=\"Soft wrap\"\n          />\n          <span>Soft wrap</span>\n        </label>\n      </div>\n\n      <div className=\"te-wrap\">\n        <div ref={gutterRef} className=\"te-gutter\" aria-hidden=\"true\">\n          {gutterLines.map((n) => (\n            <div key={n} className={`te-line ${n === cursorLine ? \"active\" : \"\"}`}>\n              {n}\n            </div>\n          ))}\n        </div>\n\n        <textarea\n          ref={taRef}\n          className={`te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`}\n          aria-label=\"Family tree text editor\"\n          value={treeText}\n          onChange={(e) => onTextChange(e.target.value)}\n          onScroll={handleScroll}\n          onClick={updateCursorLine}\n          onKeyUp={updateCursorLine}\n          onSelect={updateCursorLine}\n          onKeyDown={handleKeyDown}\n          spellCheck={false}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMS,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMW,KAAK,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE1B,MAAMY,EAAE,GAAG,IAAI;EAEf,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAACV,QAAQ,CAACW,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAEC,MAAM,GAAG,CAAC,CAAC;EACvE,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAEJ;EAAU,CAAC,EAAE,CAACQ,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EAEtE,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIb,SAAS,CAACc,OAAO,IAAIb,KAAK,CAACa,OAAO,EAAE;MACtCd,SAAS,CAACc,OAAO,CAACC,SAAS,GAAGd,KAAK,CAACa,OAAO,CAACC,SAAS;IACvD;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,EAAE,GAAGhB,KAAK,CAACa,OAAO;IACxB,IAAI,CAACG,EAAE,EAAE;IACT,MAAMC,GAAG,GAAG,OAAOD,EAAE,CAACE,cAAc,KAAK,QAAQ,GAAGF,EAAE,CAACE,cAAc,GAAG,CAAC;IACzE,MAAMC,IAAI,GAAGzB,QAAQ,CAAC0B,KAAK,CAAC,CAAC,EAAEH,GAAG,CAAC,CAACI,KAAK,CAACpB,EAAE,CAAC,CAACK,MAAM;IACpDgB,aAAa,CAACH,IAAI,CAAC;EACrB,CAAC;EAED,MAAM,CAACI,UAAU,EAAED,aAAa,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAE/C,MAAMkC,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,KAAK,IAAI,CAAC1B,KAAK,CAACa,OAAO,EAAE;IACvCY,CAAC,CAACE,cAAc,CAAC,CAAC;IAElB,MAAMX,EAAE,GAAGhB,KAAK,CAACa,OAAO;IACxB,MAAMe,QAAQ,GAAGZ,EAAE,CAACE,cAAc;IAClC,MAAMW,MAAM,GAAGb,EAAE,CAACc,YAAY;IAE9B,MAAMC,IAAI,GAAGrC,QAAQ;IACrB,MAAMsC,SAAS,GAAGD,IAAI,CAACE,WAAW,CAAChC,EAAE,EAAE2B,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;IACxD,MAAMM,OAAO,GAAGH,IAAI,CAACI,OAAO,CAAClC,EAAE,EAAE4B,MAAM,CAAC;IACxC,MAAMO,QAAQ,GAAGF,OAAO,KAAK,CAAC,CAAC,GAAGH,IAAI,CAACzB,MAAM,GAAG4B,OAAO;IAEvD,MAAMG,MAAM,GAAGN,IAAI,CAACX,KAAK,CAAC,CAAC,EAAEY,SAAS,CAAC;IACvC,MAAMM,MAAM,GAAGP,IAAI,CAACX,KAAK,CAACY,SAAS,EAAEI,QAAQ,CAAC;IAC9C,MAAMG,KAAK,GAAGR,IAAI,CAACX,KAAK,CAACgB,QAAQ,CAAC;IAElC,IAAIX,CAAC,CAACe,QAAQ,EAAE;MACd;MACA,MAAMC,GAAG,GAAGH,MAAM,CAACI,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;MAClD/C,YAAY,CAAC0C,MAAM,GAAGI,GAAG,GAAGF,KAAK,CAAC;MAClCI,qBAAqB,CAAC,MAAM;QAC1B3B,EAAE,CAAC4B,iBAAiB,CAClBzC,IAAI,CAACC,GAAG,CAACwB,QAAQ,GAAG,CAAC,EAAEI,SAAS,CAAC,EACjC7B,IAAI,CAACC,GAAG,CAACyB,MAAM,GAAG,CAAC,EAAEG,SAAS,CAChC,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACA,MAAMa,KAAK,GAAG,CAACP,MAAM,CAACjC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAEC,MAAM,GAAG,CAAC;MACpD,MAAMmC,GAAG,GAAGH,MAAM,CAACI,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;MACvC/C,YAAY,CAAC0C,MAAM,GAAGI,GAAG,GAAGF,KAAK,CAAC;MAClCI,qBAAqB,CAAC,MAAM;QAC1B3B,EAAE,CAAC4B,iBAAiB,CAAChB,QAAQ,GAAG,CAAC,EAAEC,MAAM,GAAGgB,KAAK,CAAC;MACpD,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACErD,OAAA;IAAKsD,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BvD,OAAA;MAAKwD,KAAK,EAAE;QAAEC,YAAY,EAAE,CAAC;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE;MAAE,CAAE;MAAAL,QAAA,eAC7EvD,OAAA;QAAOwD,KAAK,EAAE;UAAEE,OAAO,EAAE,aAAa;UAAEC,UAAU,EAAE,QAAQ;UAAEC,GAAG,EAAE;QAAE,CAAE;QAAAL,QAAA,gBACrEvD,OAAA;UACE6D,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEzD,QAAS;UAClB0D,QAAQ,EAAG9B,CAAC,IAAK3B,WAAW,CAAC2B,CAAC,CAAC+B,MAAM,CAACF,OAAO,CAAE;UAC/C,cAAW;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFpE,OAAA;UAAAuD,QAAA,EAAM;QAAS;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENpE,OAAA;MAAKsD,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBvD,OAAA;QAAKqE,GAAG,EAAE9D,SAAU;QAAC+C,SAAS,EAAC,WAAW;QAAC,eAAY,MAAM;QAAAC,QAAA,EAC1DxC,WAAW,CAACuD,GAAG,CAAEC,CAAC,iBACjBvE,OAAA;UAAasD,SAAS,EAAE,WAAWiB,CAAC,KAAKxC,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UAAAwB,QAAA,EACnEgB;QAAC,GADMA,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENpE,OAAA;QACEqE,GAAG,EAAE7D,KAAM;QACX8C,SAAS,EAAE,eAAejD,QAAQ,GAAG,MAAM,GAAG,QAAQ,EAAG;QACzD,cAAW,yBAAyB;QACpCmE,KAAK,EAAEtE,QAAS;QAChB6D,QAAQ,EAAG9B,CAAC,IAAK9B,YAAY,CAAC8B,CAAC,CAAC+B,MAAM,CAACQ,KAAK,CAAE;QAC9CC,QAAQ,EAAErD,YAAa;QACvBsD,OAAO,EAAEnD,gBAAiB;QAC1BoD,OAAO,EAAEpD,gBAAiB;QAC1BqD,QAAQ,EAAErD,gBAAiB;QAC3BsD,SAAS,EAAE7C,aAAc;QACzB8C,UAAU,EAAE;MAAM;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChE,EAAA,CAvGuBH,UAAU;AAAA8E,EAAA,GAAV9E,UAAU;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}