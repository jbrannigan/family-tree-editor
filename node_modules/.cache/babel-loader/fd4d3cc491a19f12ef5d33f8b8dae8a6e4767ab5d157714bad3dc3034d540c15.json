{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/TreeView.js\nimport React, { useState, useMemo, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S = {\n  wrap: {\n    padding: 10,\n    background: \"#fafafa\",\n    border: \"1px solid #eee\",\n    borderRadius: 10\n  },\n  ul: {\n    listStyle: \"none\",\n    margin: 0,\n    paddingLeft: 18,\n    position: \"relative\"\n  },\n  ulLine: {\n    content: '\"\"',\n    position: \"absolute\",\n    left: 7,\n    top: 0,\n    bottom: 0,\n    borderLeft: \"1px solid #d4d4d8\"\n  },\n  li: {\n    position: \"relative\",\n    paddingLeft: 12,\n    margin: \"4px 0\"\n  },\n  liLine: {\n    content: '\"\"',\n    position: \"absolute\",\n    left: 7,\n    top: 11,\n    width: 10,\n    borderTop: \"1px solid #d4d4d8\"\n  },\n  row: {\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: 8,\n    padding: \"2px 0\",\n    whiteSpace: \"nowrap\"\n  },\n  toggle: {\n    width: 16,\n    display: \"inline-block\",\n    userSelect: \"none\",\n    cursor: \"pointer\",\n    color: \"#666\"\n  },\n  name: focused => ({\n    fontWeight: 600,\n    color: focused ? \"#0b6efd\" : \"inherit\"\n  }),\n  focusBtn: {\n    background: \"none\",\n    border: 0,\n    cursor: \"pointer\",\n    padding: 0,\n    marginLeft: 6,\n    color: \"#666\"\n  }\n};\nfunction UL({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: S.ul,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: S.ulLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = UL;\nfunction LI({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: S.li,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: S.liLine\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c2 = LI;\nfunction Row({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: S.row,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n_c3 = Row;\nfunction Toggle({\n  visible,\n  expanded,\n  onClick\n}) {\n  if (!visible) return /*#__PURE__*/_jsxDEV(\"span\", {\n    style: {\n      ...S.toggle,\n      visibility: \"hidden\"\n    },\n    children: \"\\u25B8\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    role: \"button\",\n    \"aria-label\": expanded ? \"Collapse\" : \"Expand\",\n    title: expanded ? \"Collapse\" : \"Expand\",\n    style: S.toggle,\n    onClick: onClick,\n    children: expanded ? \"▾\" : \"▸\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Toggle;\nfunction Node({\n  node,\n  expandedMap,\n  setExpandedMap,\n  focusedNodeId,\n  onFocus,\n  onUnfocus\n}) {\n  _s();\n  var _node$id, _expandedMap$id;\n  const id = (_node$id = node.id) !== null && _node$id !== void 0 ? _node$id : node.name; // fallback id\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\n  const expanded = (_expandedMap$id = expandedMap[id]) !== null && _expandedMap$id !== void 0 ? _expandedMap$id : true;\n  const isFocused = focusedNodeId === id;\n  const toggle = useCallback(() => {\n    setExpandedMap(prev => {\n      var _prev$id;\n      return {\n        ...prev,\n        [id]: !((_prev$id = prev[id]) !== null && _prev$id !== void 0 ? _prev$id : true)\n      };\n    });\n  }, [id, setExpandedMap]);\n  return /*#__PURE__*/_jsxDEV(LI, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Toggle, {\n        visible: hasChildren,\n        expanded: expanded,\n        onClick: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: S.name(isFocused),\n        children: node.name || \"(unnamed)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: S.focusBtn,\n        title: isFocused ? \"Unfocus\" : \"Focus\",\n        \"aria-label\": isFocused ? \"Unfocus\" : \"Focus\",\n        onClick: () => isFocused ? onUnfocus() : onFocus(node),\n        children: isFocused ? \"−\" : \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), hasChildren && expanded && /*#__PURE__*/_jsxDEV(UL, {\n      children: node.children.map((child, i) => {\n        var _child$id;\n        return /*#__PURE__*/_jsxDEV(Node, {\n          node: child,\n          expandedMap: expandedMap,\n          setExpandedMap: setExpandedMap,\n          focusedNodeId: focusedNodeId,\n          onFocus: onFocus,\n          onUnfocus: onUnfocus\n        }, (_child$id = child.id) !== null && _child$id !== void 0 ? _child$id : `${id}-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Node, \"umzuRS/+IaC9qXdsuWYWZjMMAoM=\");\n_c5 = Node;\nexport default function TreeView({\n  tree,\n  onFocus,\n  onUnfocus,\n  focusedNodeId = null\n}) {\n  _s2();\n  const roots = useMemo(() => Array.isArray(tree) ? tree : tree ? [tree] : [], [tree]);\n  const [expandedMap, setExpandedMap] = useState({}); // id -> bool\n\n  if (!roots.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No tree data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: S.wrap,\n    children: roots.map((root, i) => {\n      var _root$id;\n      return /*#__PURE__*/_jsxDEV(Node, {\n        node: root,\n        expandedMap: expandedMap,\n        setExpandedMap: setExpandedMap,\n        focusedNodeId: focusedNodeId,\n        onFocus: onFocus,\n        onUnfocus: onUnfocus\n      }, (_root$id = root.id) !== null && _root$id !== void 0 ? _root$id : `root-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s2(TreeView, \"2GSXRHQBnsgBIiRe2wb6xI1DaTA=\");\n_c6 = TreeView;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"UL\");\n$RefreshReg$(_c2, \"LI\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Toggle\");\n$RefreshReg$(_c5, \"Node\");\n$RefreshReg$(_c6, \"TreeView\");","map":{"version":3,"names":["React","useState","useMemo","useCallback","jsxDEV","_jsxDEV","S","wrap","padding","background","border","borderRadius","ul","listStyle","margin","paddingLeft","position","ulLine","content","left","top","bottom","borderLeft","li","liLine","width","borderTop","row","display","alignItems","gap","whiteSpace","toggle","userSelect","cursor","color","name","focused","fontWeight","focusBtn","marginLeft","UL","children","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","LI","_c2","Row","_c3","Toggle","visible","expanded","onClick","visibility","role","title","_c4","Node","node","expandedMap","setExpandedMap","focusedNodeId","onFocus","onUnfocus","_s","_node$id","_expandedMap$id","id","hasChildren","Array","isArray","length","isFocused","prev","_prev$id","map","child","i","_child$id","_c5","TreeView","tree","_s2","roots","root","_root$id","_c6","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// src/TreeView.js\r\nimport React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nconst S = {\r\n  wrap: { padding: 10, background: \"#fafafa\", border: \"1px solid #eee\", borderRadius: 10 },\r\n  ul: { listStyle: \"none\", margin: 0, paddingLeft: 18, position: \"relative\" },\r\n  ulLine: { content: '\"\"', position: \"absolute\", left: 7, top: 0, bottom: 0, borderLeft: \"1px solid #d4d4d8\" },\r\n  li: { position: \"relative\", paddingLeft: 12, margin: \"4px 0\" },\r\n  liLine: { content: '\"\"', position: \"absolute\", left: 7, top: 11, width: 10, borderTop: \"1px solid #d4d4d8\" },\r\n  row: { display: \"flex\", alignItems: \"center\", gap: 8, padding: \"2px 0\", whiteSpace: \"nowrap\" },\r\n  toggle: { width: 16, display: \"inline-block\", userSelect: \"none\", cursor: \"pointer\", color: \"#666\" },\r\n  name: (focused) => ({ fontWeight: 600, color: focused ? \"#0b6efd\" : \"inherit\" }),\r\n  focusBtn: { background: \"none\", border: 0, cursor: \"pointer\", padding: 0, marginLeft: 6, color: \"#666\" },\r\n};\r\n\r\nfunction UL({ children }) {\r\n  return (\r\n    <div style={S.ul}>\r\n      <span style={S.ulLine} />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LI({ children }) {\r\n  return (\r\n    <div style={S.li}>\r\n      <span style={S.liLine} />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Row({ children }) {\r\n  return <div style={S.row}>{children}</div>;\r\n}\r\n\r\nfunction Toggle({ visible, expanded, onClick }) {\r\n  if (!visible) return <span style={{ ...S.toggle, visibility: \"hidden\" }}>▸</span>;\r\n  return (\r\n    <span\r\n      role=\"button\"\r\n      aria-label={expanded ? \"Collapse\" : \"Expand\"}\r\n      title={expanded ? \"Collapse\" : \"Expand\"}\r\n      style={S.toggle}\r\n      onClick={onClick}\r\n    >\r\n      {expanded ? \"▾\" : \"▸\"}\r\n    </span>\r\n  );\r\n}\r\n\r\nfunction Node({\r\n  node,\r\n  expandedMap,\r\n  setExpandedMap,\r\n  focusedNodeId,\r\n  onFocus,\r\n  onUnfocus,\r\n}) {\r\n  const id = node.id ?? node.name; // fallback id\r\n  const hasChildren = Array.isArray(node.children) && node.children.length > 0;\r\n  const expanded = expandedMap[id] ?? true;\r\n  const isFocused = focusedNodeId === id;\r\n\r\n  const toggle = useCallback(() => {\r\n    setExpandedMap((prev) => ({ ...prev, [id]: !(prev[id] ?? true) }));\r\n  }, [id, setExpandedMap]);\r\n\r\n  return (\r\n    <LI>\r\n      <Row>\r\n        <Toggle visible={hasChildren} expanded={expanded} onClick={toggle} />\r\n        <span style={S.name(isFocused)}>{node.name || \"(unnamed)\"}</span>\r\n        <button\r\n          style={S.focusBtn}\r\n          title={isFocused ? \"Unfocus\" : \"Focus\"}\r\n          aria-label={isFocused ? \"Unfocus\" : \"Focus\"}\r\n          onClick={() => (isFocused ? onUnfocus() : onFocus(node))}\r\n        >\r\n          {isFocused ? \"−\" : \"+\"}\r\n        </button>\r\n      </Row>\r\n\r\n      {hasChildren && expanded && (\r\n        <UL>\r\n          {node.children.map((child, i) => (\r\n            <Node\r\n              key={child.id ?? `${id}-${i}`}\r\n              node={child}\r\n              expandedMap={expandedMap}\r\n              setExpandedMap={setExpandedMap}\r\n              focusedNodeId={focusedNodeId}\r\n              onFocus={onFocus}\r\n              onUnfocus={onUnfocus}\r\n            />\r\n          ))}\r\n        </UL>\r\n      )}\r\n    </LI>\r\n  );\r\n}\r\n\r\nexport default function TreeView({\r\n  tree,\r\n  onFocus,\r\n  onUnfocus,\r\n  focusedNodeId = null,\r\n}) {\r\n  const roots = useMemo(() => (Array.isArray(tree) ? tree : tree ? [tree] : []), [tree]);\r\n  const [expandedMap, setExpandedMap] = useState({}); // id -> bool\r\n\r\n  if (!roots.length) return <div>No tree data available</div>;\r\n\r\n  return (\r\n    <div style={S.wrap}>\r\n      {roots.map((root, i) => (\r\n        <Node\r\n          key={root.id ?? `root-${i}`}\r\n          node={root}\r\n          expandedMap={expandedMap}\r\n          setExpandedMap={setExpandedMap}\r\n          focusedNodeId={focusedNodeId}\r\n          onFocus={onFocus}\r\n          onUnfocus={onUnfocus}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}