{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect, useState } from \"react\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction findNodeById(nodes, id) {\n  for (const n of nodes) {\n    var _n$id;\n    if (((_n$id = n.id) !== null && _n$id !== void 0 ? _n$id : n.name) === id) return n;\n    if (Array.isArray(n.children)) {\n      const found = findNodeById(n.children, id);\n      if (found) return found;\n    }\n  }\n  return null;\n}\nexport default function App() {\n  _s();\n  var _focusedNode$id;\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\n\n  // Width of the left editor pane as a percentage\n  const [leftPct, setLeftPct] = useState(40);\n  const draggingRef = useRef(false);\n  useEffect(() => {\n    const onMove = e => {\n      if (!draggingRef.current) return;\n      const app = document.querySelector(\".app-root\");\n      if (!app) return;\n      const rect = app.getBoundingClientRect();\n      const x = e.clientX - rect.left; // pixels from left of container\n      const pct = Math.min(70, Math.max(20, x / rect.width * 100)); // clamp 20â€“70%\n      setLeftPct(pct);\n    };\n    const onUp = () => draggingRef.current = false;\n    window.addEventListener(\"mousemove\", onMove);\n    window.addEventListener(\"mouseup\", onUp);\n    return () => {\n      window.removeEventListener(\"mousemove\", onMove);\n      window.removeEventListener(\"mouseup\", onUp);\n    };\n  }, []);\n  const startDrag = () => draggingRef.current = true;\n  // parse on text change\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText); // must return an ARRAY of root nodes\n      setTreeData(Array.isArray(parsed) ? parsed : parsed ? [parsed] : []);\n    } catch (e) {\n      console.error(\"Parse error:\", e);\n      setTreeData([]);\n    }\n  }, [treeText]);\n\n  // file load\n  const handleFileLoad = text => setTreeText(text);\n\n  // focus/unfocus\n  const handleFocus = node => {\n    var _node$id;\n    return setFocusedNodeId((_node$id = node.id) !== null && _node$id !== void 0 ? _node$id : node.name);\n  };\n  const handleUnfocus = () => setFocusedNodeId(null);\n\n  // compute displayed tree\n  const focusedNode = focusedNodeId ? findNodeById(treeData, focusedNodeId) : null;\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n\n  // downloads\n  const download = (content, name, type) => {\n    const blob = new Blob([content], {\n      type\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = name;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadHTML = () => {\n    const html = generateHTML(displayedTree);\n    download(html, \"family_tree.html\", \"text/html\");\n  };\n  const handleDownloadJSON = () => {\n    const json = JSON.stringify(displayedTree, null, 2);\n    download(json, \"family_tree.json\", \"application/json\");\n  };\n  const handleDownloadSVG = () => {\n    const svg = document.getElementById(\"graph-svg\");\n    if (!svg) return;\n    const serializer = new XMLSerializer();\n    // include xmlns so standalone SVG opens correctly\n    const clone = svg.cloneNode(true);\n    clone.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    const source = serializer.serializeToString(clone);\n    download(source, \"family_tree.svg\", \"image/svg+xml\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"McGinty Family Tree Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: 16,\n        alignItems: \"flex-start\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          minWidth: 320\n        },\n        children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n          onLoad: handleFileLoad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: treeText,\n          onChange: e => setTreeText(e.target.value),\n          placeholder: \"Paste or edit tree text here...\",\n          rows: 28,\n          style: {\n            width: \"100%\",\n            marginTop: 8,\n            fontFamily: \"monospace\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n          onDownloadHTML: handleDownloadHTML,\n          onDownloadSVG: handleDownloadSVG,\n          onDownloadJSON: handleDownloadJSON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1.2,\n          minWidth: 480\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: 0\n            },\n            children: \"Tree View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), focusedNode && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUnfocus,\n            title: \"Show entire tree\",\n            children: \"Unfocus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #e3e3e3\",\n            padding: 8,\n            marginTop: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(TreeView, {\n            tree: displayedTree,\n            onFocus: handleFocus,\n            onUnfocus: handleUnfocus,\n            focusedNodeId: focusedNode ? (_focusedNode$id = focusedNode.id) !== null && _focusedNode$id !== void 0 ? _focusedNode$id : focusedNode.name : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1.2,\n          minWidth: 520\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SVG View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O5mDc8dTwkVCQPGfdFFGD3T79uw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","UploadButton","DownloadButtons","TreeView","GraphView","parseTree","generateHTML","jsxDEV","_jsxDEV","findNodeById","nodes","id","n","_n$id","name","Array","isArray","children","found","App","_s","_focusedNode$id","treeText","setTreeText","treeData","setTreeData","focusedNodeId","setFocusedNodeId","leftPct","setLeftPct","draggingRef","useRef","onMove","e","current","app","document","querySelector","rect","getBoundingClientRect","x","clientX","left","pct","Math","min","max","width","onUp","window","addEventListener","removeEventListener","startDrag","parsed","console","error","handleFileLoad","text","handleFocus","node","_node$id","handleUnfocus","focusedNode","displayedTree","download","content","type","blob","Blob","url","URL","createObjectURL","a","createElement","href","click","revokeObjectURL","handleDownloadHTML","html","handleDownloadJSON","json","JSON","stringify","handleDownloadSVG","svg","getElementById","serializer","XMLSerializer","clone","cloneNode","setAttribute","source","serializeToString","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","alignItems","flex","minWidth","onLoad","value","onChange","target","placeholder","rows","marginTop","fontFamily","onDownloadHTML","onDownloadSVG","onDownloadJSON","justifyContent","margin","onClick","title","border","tree","onFocus","onUnfocus","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButtons from \"./DownloadButtons\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\n\r\nfunction findNodeById(nodes, id) {\r\n  for (const n of nodes) {\r\n    if ((n.id ?? n.name) === id) return n;\r\n    if (Array.isArray(n.children)) {\r\n      const found = findNodeById(n.children, id);\r\n      if (found) return found;\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default function App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\r\n\r\n  // Width of the left editor pane as a percentage\r\n  const [leftPct, setLeftPct] = useState(40);\r\n  const draggingRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const onMove = (e) => {\r\n      if (!draggingRef.current) return;\r\n      const app = document.querySelector(\".app-root\");\r\n      if (!app) return;\r\n      const rect = app.getBoundingClientRect();\r\n      const x = e.clientX - rect.left; // pixels from left of container\r\n      const pct = Math.min(70, Math.max(20, (x / rect.width) * 100)); // clamp 20â€“70%\r\n      setLeftPct(pct);\r\n    };\r\n    const onUp = () => (draggingRef.current = false);\r\n\r\n    window.addEventListener(\"mousemove\", onMove);\r\n    window.addEventListener(\"mouseup\", onUp);\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", onMove);\r\n      window.removeEventListener(\"mouseup\", onUp);\r\n    };\r\n  }, []);\r\n\r\n  const startDrag = () => (draggingRef.current = true);\r\n  // parse on text change\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText); // must return an ARRAY of root nodes\r\n      setTreeData(Array.isArray(parsed) ? parsed : (parsed ? [parsed] : []));\r\n    } catch (e) {\r\n      console.error(\"Parse error:\", e);\r\n      setTreeData([]);\r\n    }\r\n  }, [treeText]);\r\n\r\n  // file load\r\n  const handleFileLoad = (text) => setTreeText(text);\r\n\r\n  // focus/unfocus\r\n  const handleFocus = (node) => setFocusedNodeId(node.id ?? node.name);\r\n  const handleUnfocus = () => setFocusedNodeId(null);\r\n\r\n  // compute displayed tree\r\n  const focusedNode = focusedNodeId ? findNodeById(treeData, focusedNodeId) : null;\r\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\r\n\r\n  // downloads\r\n  const download = (content, name, type) => {\r\n    const blob = new Blob([content], { type });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = name;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDownloadHTML = () => {\r\n    const html = generateHTML(displayedTree);\r\n    download(html, \"family_tree.html\", \"text/html\");\r\n  };\r\n\r\n  const handleDownloadJSON = () => {\r\n    const json = JSON.stringify(displayedTree, null, 2);\r\n    download(json, \"family_tree.json\", \"application/json\");\r\n  };\r\n\r\n  const handleDownloadSVG = () => {\r\n    const svg = document.getElementById(\"graph-svg\");\r\n    if (!svg) return;\r\n    const serializer = new XMLSerializer();\r\n    // include xmlns so standalone SVG opens correctly\r\n    const clone = svg.cloneNode(true);\r\n    clone.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\r\n    const source = serializer.serializeToString(clone);\r\n    download(source, \"family_tree.svg\", \"image/svg+xml\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 16 }}>\r\n      <h2>McGinty Family Tree Editor</h2>\r\n\r\n      <div style={{ display: \"flex\", gap: 16, alignItems: \"flex-start\" }}>\r\n        {/* Editor */}\r\n        <div style={{ flex: 1, minWidth: 320 }}>\r\n          <UploadButton onLoad={handleFileLoad} />\r\n          <textarea\r\n            value={treeText}\r\n            onChange={(e) => setTreeText(e.target.value)}\r\n            placeholder=\"Paste or edit tree text here...\"\r\n            rows={28}\r\n            style={{ width: \"100%\", marginTop: 8, fontFamily: \"monospace\" }}\r\n          />\r\n          <DownloadButtons\r\n            onDownloadHTML={handleDownloadHTML}\r\n            onDownloadSVG={handleDownloadSVG}\r\n            onDownloadJSON={handleDownloadJSON}\r\n          />\r\n        </div>\r\n\r\n        {/* Tree View */}\r\n        <div style={{ flex: 1.2, minWidth: 480 }}>\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n            <h3 style={{ margin: 0 }}>Tree View</h3>\r\n            {focusedNode && (\r\n              <button onClick={handleUnfocus} title=\"Show entire tree\">\r\n                Unfocus\r\n              </button>\r\n            )}\r\n          </div>\r\n          <div style={{ border: \"1px solid #e3e3e3\", padding: 8, marginTop: 8 }}>\r\n            <TreeView\r\n              tree={displayedTree}\r\n              onFocus={handleFocus}\r\n              onUnfocus={handleUnfocus}\r\n              focusedNodeId={focusedNode ? (focusedNode.id ?? focusedNode.name) : null}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* SVG View */}\r\n        <div style={{ flex: 1.2, minWidth: 520 }}>\r\n          <h3>SVG View</h3>\r\n          <GraphView tree={displayedTree} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}