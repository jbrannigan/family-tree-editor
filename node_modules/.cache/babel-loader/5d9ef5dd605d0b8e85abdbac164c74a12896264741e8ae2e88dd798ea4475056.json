{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus\n}) => {\n  _s();\n  const [collapsed, setCollapsed] = useState(false);\n  const toggleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleCollapse,\n      style: {\n        cursor: \"pointer\",\n        marginRight: \"8px\"\n      },\n      children: node.children && node.children.length > 0 ? collapsed ? \"[+]\" : \"[-]\" : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), node.name, /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      onClick: () => onFocus(node),\n      children: \"Focus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), !collapsed && node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus\n}) => {\n  if (!tree || tree.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View (Collapsible)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tree.map((node, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        onFocus: onFocus\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","onFocus","_s","collapsed","setCollapsed","toggleCollapse","children","onClick","style","cursor","marginRight","length","fileName","_jsxFileName","lineNumber","columnNumber","name","marginLeft","map","child","index","_c","TreeView","tree","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst TreeNode = ({ node, onFocus }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const toggleCollapse = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <span onClick={toggleCollapse} style={{ cursor: \"pointer\", marginRight: \"8px\" }}>\r\n        {node.children && node.children.length > 0 ? (collapsed ? \"[+]\" : \"[-]\") : null}\r\n      </span>\r\n      {node.name}\r\n      <button style={{ marginLeft: \"10px\" }} onClick={() => onFocus(node)}>Focus</button>\r\n      {!collapsed && node.children && node.children.length > 0 && (\r\n        <ul>\r\n          {node.children.map((child, index) => (\r\n            <TreeNode key={index} node={child} onFocus={onFocus} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus }) => {\r\n  if (!tree || tree.length === 0) {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tree View (Collapsible)</h3>\r\n      <ul>\r\n        {tree.map((node, index) => (\r\n          <TreeNode key={index} node={node} onFocus={onFocus} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}