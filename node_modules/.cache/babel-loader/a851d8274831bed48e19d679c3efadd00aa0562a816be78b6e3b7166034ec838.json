{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButton from \"./DownloadButton\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const [displayedTree, setDisplayedTree] = useState([]);\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\n\n  // Re-parse tree text when it changes\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n      setDisplayedTree(parsed);\n    } catch (err) {\n      console.error(\"Failed to parse tree:\", err);\n    }\n  }, [treeText]);\n  const handleTextChange = e => {\n    setTreeText(e.target.value);\n  };\n  const handleFileLoad = text => {\n    setTreeText(text);\n  };\n  const handleFocus = node => {\n    if (node !== null && node !== void 0 && node.id) {\n      setFocusedNodeId(node.id);\n      setDisplayedTree([node]);\n    }\n  };\n  const handleUnfocus = () => {\n    setFocusedNodeId(null);\n    setDisplayedTree(treeData);\n  };\n  const handleDownloadHTML = () => {\n    const html = generateHTML(displayedTree);\n    const blob = new Blob([html], {\n      type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"family_tree.html\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadJSON = () => {\n    const json = JSON.stringify(displayedTree, null, 2);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"family_tree.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"McGinty Family Tree Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadButton, {\n      onLoad: handleFileLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-pane\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tree Text Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: treeText,\n          onChange: handleTextChange,\n          placeholder: \"Paste or edit tree text here...\",\n          rows: 30,\n          cols: 40\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-pane\",\n        children: [/*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          onUnfocus: handleUnfocus,\n          focusedNodeId: focusedNodeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-row\",\n      children: [focusedNodeId && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnfocus,\n        children: \"Unfocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        onClick: handleDownloadHTML,\n        label: \"Download HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButton, {\n        onClick: handleDownloadJSON,\n        label: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HzrHMlNee5o+MCVyZihYFAUHleg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","UploadButton","DownloadButton","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","displayedTree","setDisplayedTree","focusedNodeId","setFocusedNodeId","parsed","err","console","error","handleTextChange","e","target","value","handleFileLoad","text","handleFocus","node","id","handleUnfocus","handleDownloadHTML","html","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDownloadJSON","json","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","onChange","placeholder","rows","cols","tree","onFocus","onUnfocus","onClick","label","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [displayedTree, setDisplayedTree] = useState([]);\r\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\r\n\r\n  // Re-parse tree text when it changes\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n      setDisplayedTree(parsed);\r\n    } catch (err) {\r\n      console.error(\"Failed to parse tree:\", err);\r\n    }\r\n  }, [treeText]);\r\n\r\n  const handleTextChange = (e) => {\r\n    setTreeText(e.target.value);\r\n  };\r\n\r\n  const handleFileLoad = (text) => {\r\n    setTreeText(text);\r\n  };\r\n\r\n  const handleFocus = (node) => {\r\n    if (node?.id) {\r\n      setFocusedNodeId(node.id);\r\n      setDisplayedTree([node]);\r\n    }\r\n  };\r\n\r\n  const handleUnfocus = () => {\r\n    setFocusedNodeId(null);\r\n    setDisplayedTree(treeData);\r\n  };\r\n\r\n  const handleDownloadHTML = () => {\r\n    const html = generateHTML(displayedTree);\r\n    const blob = new Blob([html], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"family_tree.html\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDownloadJSON = () => {\r\n    const json = JSON.stringify(displayedTree, null, 2);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"family_tree.json\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>McGinty Family Tree Editor</h1>\r\n      <UploadButton onLoad={handleFileLoad} />\r\n      <div className=\"editor-container\">\r\n        <div className=\"editor-pane\">\r\n          <h3>Tree Text Editor</h3>\r\n          <textarea\r\n            value={treeText}\r\n            onChange={handleTextChange}\r\n            placeholder=\"Paste or edit tree text here...\"\r\n            rows={30}\r\n            cols={40}\r\n          />\r\n        </div>\r\n        <div className=\"tree-pane\">\r\n          <TreeView\r\n            tree={displayedTree}\r\n            onFocus={handleFocus}\r\n            onUnfocus={handleUnfocus}\r\n            focusedNodeId={focusedNodeId}\r\n          />\r\n          <GraphView tree={displayedTree} />\r\n        </div>\r\n      </div>\r\n      <div className=\"button-row\">\r\n        {focusedNodeId && (\r\n          <button onClick={handleUnfocus}>Unfocus</button>\r\n        )}\r\n        <DownloadButton onClick={handleDownloadHTML} label=\"Download HTML\" />\r\n        <DownloadButton onClick={handleDownloadJSON} label=\"Download JSON\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}