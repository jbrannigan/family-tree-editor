{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\",\n  _s = $RefreshSig$();\n// TreeView.js\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus,\n  pinnedId\n}) => {\n  _s();\n  const [collapsed, setCollapsed] = useState(false);\n  const handleToggle = () => {\n    setCollapsed(!collapsed);\n  };\n  const isFocused = pinnedId === node.id;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: \"pointer\",\n        fontWeight: isFocused ? \"bold\" : \"normal\",\n        color: isFocused ? \"#007acc\" : \"inherit\"\n      },\n      onClick: () => onFocus(node.id),\n      children: [node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleToggle,\n        style: {\n          marginRight: 5\n        },\n        children: [\"[\", collapsed ? \"▸\" : \"▾\", \"]\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), node.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), !collapsed && node.children && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        marginLeft: 20\n      },\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus,\n        pinnedId: pinnedId\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"IaHwFfvbaw8y79e5do0CzWS1eXc=\");\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus,\n  pinnedId\n}) => {\n  if (!tree || !Array.isArray(tree)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View (Collapsible)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        paddingLeft: 0\n      },\n      children: tree.map(node => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: node,\n        onFocus: onFocus,\n        pinnedId: pinnedId\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","node","onFocus","pinnedId","_s","collapsed","setCollapsed","handleToggle","isFocused","id","children","style","cursor","fontWeight","color","onClick","length","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","name","marginLeft","map","child","_c","TreeView","tree","Array","isArray","padding","listStyle","paddingLeft","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["// TreeView.js\r\nimport React, { useState } from \"react\";\r\n\r\nconst TreeNode = ({ node, onFocus, pinnedId }) => {\r\n  const [collapsed, setCollapsed] = useState(false);\r\n\r\n  const handleToggle = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const isFocused = pinnedId === node.id;\r\n\r\n  return (\r\n    <li>\r\n      <div\r\n        style={{\r\n          cursor: \"pointer\",\r\n          fontWeight: isFocused ? \"bold\" : \"normal\",\r\n          color: isFocused ? \"#007acc\" : \"inherit\",\r\n        }}\r\n        onClick={() => onFocus(node.id)}\r\n      >\r\n        {node.children && node.children.length > 0 && (\r\n          <span onClick={handleToggle} style={{ marginRight: 5 }}>\r\n            [{collapsed ? \"▸\" : \"▾\"}]\r\n          </span>\r\n        )}\r\n        {node.name}\r\n      </div>\r\n\r\n      {!collapsed && node.children && (\r\n        <ul style={{ marginLeft: 20 }}>\r\n          {node.children.map((child) => (\r\n            <TreeNode\r\n              key={child.id}\r\n              node={child}\r\n              onFocus={onFocus}\r\n              pinnedId={pinnedId}\r\n            />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus, pinnedId }) => {\r\n  if (!tree || !Array.isArray(tree)) {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ padding: \"1rem\" }}>\r\n      <h3>Tree View (Collapsible)</h3>\r\n      <ul style={{ listStyle: \"none\", paddingLeft: 0 }}>\r\n        {tree.map((node) => (\r\n          <TreeNode\r\n            key={node.id}\r\n            node={node}\r\n            onFocus={onFocus}\r\n            pinnedId={pinnedId}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}