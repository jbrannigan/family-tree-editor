{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButton from \"./DownloadButton\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);\n  const displayedTree = focusedNodeId ? filterTree(treeData, focusedNodeId) : treeData;\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\n\n  // Re-parse tree text when it changes\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n      setDisplayedTree(parsed);\n    } catch (err) {\n      console.error(\"Failed to parse tree:\", err);\n    }\n  }, [treeText]);\n  const handleTextChange = e => {\n    setTreeText(e.target.value);\n  };\n  const handleFileLoad = text => {\n    setTreeText(text);\n  };\n  const handleFocus = node => {\n    setFocusedNodeId(node.id);\n  };\n  const handleUnfocus = () => {\n    setFocusedNodeId(null);\n  };\n  const handleDownloadHTML = () => {\n    const html = generateHTML(displayedTree);\n    const blob = new Blob([html], {\n      type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"family_tree.html\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadJSON = () => {\n    const json = JSON.stringify(displayedTree, null, 2);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"family_tree.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n        onLoad: handleFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnfocus,\n        disabled: !focusedNodeId,\n        children: \"Unfocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n        tree: treeData,\n        treeText: treeText,\n        onDownloadHTML: () => downloadHTML(treeData),\n        onDownloadSVG: () => downloadSVG(),\n        onDownloadJSON: () => downloadJSON(treeData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane\",\n        children: /*#__PURE__*/_jsxDEV(TreeEditor, {\n          treeText: treeText,\n          setTreeText: setTreeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane\",\n        children: [/*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          onUnfocus: handleUnfocus,\n          focusedNodeId: focusedNodeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"wMQ9UCyr3gO/YhdVz/m0RrZERO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","UploadButton","DownloadButton","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","displayedTree","focusedNodeId","filterTree","setFocusedNodeId","parsed","setDisplayedTree","err","console","error","handleTextChange","e","target","value","handleFileLoad","text","handleFocus","node","id","handleUnfocus","handleDownloadHTML","html","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDownloadJSON","json","JSON","stringify","className","children","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","DownloadButtons","tree","onDownloadHTML","downloadHTML","onDownloadSVG","downloadSVG","onDownloadJSON","downloadJSON","TreeEditor","onFocus","onUnfocus","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButton from \"./DownloadButton\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [treeText, setTreeText] = useState(\"\");\r\n  const [treeData, setTreeData] = useState([]);\r\n  const displayedTree = focusedNodeId\r\n    ? filterTree(treeData, focusedNodeId)\r\n    : treeData;\r\n\r\n  const [focusedNodeId, setFocusedNodeId] = useState(null);\r\n\r\n  // Re-parse tree text when it changes\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n      setDisplayedTree(parsed);\r\n    } catch (err) {\r\n      console.error(\"Failed to parse tree:\", err);\r\n    }\r\n  }, [treeText]);\r\n\r\n  const handleTextChange = (e) => {\r\n    setTreeText(e.target.value);\r\n  };\r\n\r\n  const handleFileLoad = (text) => {\r\n    setTreeText(text);\r\n  };\r\n  const handleFocus = (node) => {\r\n    setFocusedNodeId(node.id);\r\n  };\r\n\r\n  const handleUnfocus = () => {\r\n    setFocusedNodeId(null);\r\n  };\r\n\r\n  const handleDownloadHTML = () => {\r\n    const html = generateHTML(displayedTree);\r\n    const blob = new Blob([html], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"family_tree.html\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDownloadJSON = () => {\r\n    const json = JSON.stringify(displayedTree, null, 2);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"family_tree.json\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\nreturn (\r\n  <div className=\"App\">\r\n    <div className=\"top-bar\">\r\n      <UploadButton onLoad={handleFileLoad} />\r\n      <button onClick={handleUnfocus} disabled={!focusedNodeId}>\r\n        Unfocus\r\n      </button>\r\n      <DownloadButtons\r\n        tree={treeData}\r\n        treeText={treeText}\r\n        onDownloadHTML={() => downloadHTML(treeData)}\r\n        onDownloadSVG={() => downloadSVG()}\r\n        onDownloadJSON={() => downloadJSON(treeData)}\r\n      />\r\n    </div>\r\n    <div className=\"main-content\">\r\n      <div className=\"pane\">\r\n        <TreeEditor treeText={treeText} setTreeText={setTreeText} />\r\n      </div>\r\n      <div className=\"pane\">\r\n        <TreeView\r\n          tree={displayedTree}\r\n          onFocus={handleFocus}\r\n          onUnfocus={handleUnfocus}\r\n          focusedNodeId={focusedNodeId}\r\n        />\r\n        <GraphView tree={displayedTree} />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}