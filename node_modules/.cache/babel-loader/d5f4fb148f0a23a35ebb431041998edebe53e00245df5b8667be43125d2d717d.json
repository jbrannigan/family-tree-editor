{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeView.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  node,\n  onFocus\n}) => {\n  const handleClick = () => {\n    if (onFocus) {\n      onFocus(node);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: handleClick,\n      style: {\n        cursor: \"pointer\",\n        fontWeight: \"bold\"\n      },\n      children: node.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: node.children.map((child, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: child,\n        onFocus: onFocus\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TreeNode;\nconst TreeView = ({\n  tree,\n  onFocus\n}) => {\n  if (!tree || typeof tree !== \"object\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No tree data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tree View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(TreeNode, {\n        node: tree,\n        onFocus: onFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TreeNode","node","onFocus","handleClick","children","onClick","style","cursor","fontWeight","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","child","index","_c","TreeView","tree","_c2","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeView.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst TreeNode = ({ node, onFocus }) => {\r\n  const handleClick = () => {\r\n    if (onFocus) {\r\n      onFocus(node);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <span onClick={handleClick} style={{ cursor: \"pointer\", fontWeight: \"bold\" }}>\r\n        {node.name}\r\n      </span>\r\n      {node.children && node.children.length > 0 && (\r\n        <ul>\r\n          {node.children.map((child, index) => (\r\n            <TreeNode key={index} node={child} onFocus={onFocus} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst TreeView = ({ tree, onFocus }) => {\r\n  if (!tree || typeof tree !== \"object\") {\r\n    return <div>No tree data available</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tree View</h3>\r\n      <ul>\r\n        <TreeNode node={tree} onFocus={onFocus} />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAID,OAAO,EAAE;MACXA,OAAO,CAACD,IAAI,CAAC;IACf;EACF,CAAC;EAED,oBACEF,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAMM,OAAO,EAAEF,WAAY;MAACG,KAAK,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAJ,QAAA,EAC1EH,IAAI,CAACQ;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACNZ,IAAI,CAACG,QAAQ,IAAIH,IAAI,CAACG,QAAQ,CAACU,MAAM,GAAG,CAAC,iBACxCf,OAAA;MAAAK,QAAA,EACGH,IAAI,CAACG,QAAQ,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC9BlB,OAAA,CAACC,QAAQ;QAAaC,IAAI,EAAEe,KAAM;QAACd,OAAO,EAAEA;MAAQ,GAArCe,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET,CAAC;AAACK,EAAA,GArBIlB,QAAQ;AAuBd,MAAMmB,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAElB;AAAQ,CAAC,KAAK;EACtC,IAAI,CAACkB,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IACrC,oBAAOrB,OAAA;MAAAK,QAAA,EAAK;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,oBACEd,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MAAAK,QAAA,eACEL,OAAA,CAACC,QAAQ;QAACC,IAAI,EAAEmB,IAAK;QAAClB,OAAO,EAAEA;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACQ,GAAA,GAbIF,QAAQ;AAed,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}