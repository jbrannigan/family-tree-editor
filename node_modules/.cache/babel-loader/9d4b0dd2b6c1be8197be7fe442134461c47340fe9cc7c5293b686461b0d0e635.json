{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./TreeEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TreeEditor({\n  treeText,\n  onTextChange\n}) {\n  _s();\n  const [softWrap, setSoftWrap] = useState(true); // default on\n  const gutterRef = useRef(null);\n  const taRef = useRef(null);\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\n  const gutterLines = Array.from({\n    length: lineCount\n  }, (_, i) => i + 1);\n  const handleScroll = () => {\n    if (gutterRef.current && taRef.current) {\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"te-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-toolbar\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: softWrap,\n          onChange: e => setSoftWrap(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), \" \", \"Soft wrap\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: gutterRef,\n        className: \"te-gutter\",\n        \"aria-hidden\": \"true\",\n        children: gutterLines.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"te-line\",\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: taRef,\n        className: `te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`,\n        \"aria-label\": \"Family tree text editor\",\n        value: treeText,\n        onChange: e => onTextChange(e.target.value),\n        onScroll: handleScroll,\n        spellCheck: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeEditor, \"JLByyAhrkElWdLJ91d0vuOK3ZbU=\");\n_c = TreeEditor;\nvar _c;\n$RefreshReg$(_c, \"TreeEditor\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","TreeEditor","treeText","onTextChange","_s","softWrap","setSoftWrap","gutterRef","taRef","lineCount","Math","max","match","length","gutterLines","Array","from","_","i","handleScroll","current","scrollTop","className","children","type","checked","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","n","value","onScroll","spellCheck","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeEditor.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./TreeEditor.css\";\r\n\r\nexport default function TreeEditor({ treeText, onTextChange }) {\r\n  const [softWrap, setSoftWrap] = useState(true); // default on\r\n  const gutterRef = useRef(null);\r\n  const taRef = useRef(null);\r\n\r\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\r\n  const gutterLines = Array.from({ length: lineCount }, (_, i) => i + 1);\r\n\r\n  const handleScroll = () => {\r\n    if (gutterRef.current && taRef.current) {\r\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"te-container\">\r\n      <div className=\"te-toolbar\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={softWrap}\r\n            onChange={(e) => setSoftWrap(e.target.checked)}\r\n          />{\" \"}\r\n          Soft wrap\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"te-wrap\">\r\n        <div ref={gutterRef} className=\"te-gutter\" aria-hidden=\"true\">\r\n          {gutterLines.map((n) => (\r\n            <div key={n} className=\"te-line\">\r\n              {n}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <textarea\r\n          ref={taRef}\r\n          className={`te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`}\r\n          aria-label=\"Family tree text editor\"\r\n          value={treeText}\r\n          onChange={(e) => onTextChange(e.target.value)}\r\n          onScroll={handleScroll}\r\n          spellCheck={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}