{"ast":null,"code":"export function parseTree(text){const lines=text.split('\\n').filter(line=>line.trim()!=='');const root={name:'Root',children:[]};const stack=[{level:-1,node:root}];for(const line of lines){const match=line.match(/^(\\t*)(.*)$/);const level=match[1].length;const name=match[2].trim();const newNode={name,children:[]};while(stack.length>0&&stack[stack.length-1].level>=level){stack.pop();}const parent=stack[stack.length-1].node;parent.children.push(newNode);stack.push({level,node:newNode});}return root.children.length===1?root.children[0]:root;}","map":{"version":3,"names":["parseTree","text","lines","split","filter","line","trim","root","name","children","stack","level","node","match","length","newNode","pop","parent","push"],"sources":["/home/jbrannigan/src/familytree/src/utils/parseTree.js"],"sourcesContent":["export function parseTree(text) {\r\n  const lines = text.split('\\n').filter(line => line.trim() !== '');\r\n  const root = { name: 'Root', children: [] };\r\n  const stack = [{ level: -1, node: root }];\r\n\r\n  for (const line of lines) {\r\n    const match = line.match(/^(\\t*)(.*)$/);\r\n    const level = match[1].length;\r\n    const name = match[2].trim();\r\n\r\n    const newNode = { name, children: [] };\r\n\r\n    while (stack.length > 0 && stack[stack.length - 1].level >= level) {\r\n      stack.pop();\r\n    }\r\n\r\n    const parent = stack[stack.length - 1].node;\r\n    parent.children.push(newNode);\r\n    stack.push({ level, node: newNode });\r\n  }\r\n\r\n  return root.children.length === 1 ? root.children[0] : root;\r\n}\r\n"],"mappings":"AAAA,MAAO,SAAS,CAAAA,SAASA,CAACC,IAAI,CAAE,CAC9B,KAAM,CAAAC,KAAK,CAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,GAAK,EAAE,CAAC,CACjE,KAAM,CAAAC,IAAI,CAAG,CAAEC,IAAI,CAAE,MAAM,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAC3C,KAAM,CAAAC,KAAK,CAAG,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAC,CAAEC,IAAI,CAAEL,IAAK,CAAC,CAAC,CAEzC,IAAK,KAAM,CAAAF,IAAI,GAAI,CAAAH,KAAK,CAAE,CACxB,KAAM,CAAAW,KAAK,CAAGR,IAAI,CAACQ,KAAK,CAAC,aAAa,CAAC,CACvC,KAAM,CAAAF,KAAK,CAAGE,KAAK,CAAC,CAAC,CAAC,CAACC,MAAM,CAC7B,KAAM,CAAAN,IAAI,CAAGK,KAAK,CAAC,CAAC,CAAC,CAACP,IAAI,CAAC,CAAC,CAE5B,KAAM,CAAAS,OAAO,CAAG,CAAEP,IAAI,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAEtC,MAAOC,KAAK,CAACI,MAAM,CAAG,CAAC,EAAIJ,KAAK,CAACA,KAAK,CAACI,MAAM,CAAG,CAAC,CAAC,CAACH,KAAK,EAAIA,KAAK,CAAE,CACjED,KAAK,CAACM,GAAG,CAAC,CAAC,CACb,CAEA,KAAM,CAAAC,MAAM,CAAGP,KAAK,CAACA,KAAK,CAACI,MAAM,CAAG,CAAC,CAAC,CAACF,IAAI,CAC3CK,MAAM,CAACR,QAAQ,CAACS,IAAI,CAACH,OAAO,CAAC,CAC7BL,KAAK,CAACQ,IAAI,CAAC,CAAEP,KAAK,CAAEC,IAAI,CAAEG,OAAQ,CAAC,CAAC,CACtC,CAEA,MAAO,CAAAR,IAAI,CAACE,QAAQ,CAACK,MAAM,GAAK,CAAC,CAAGP,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAAGF,IAAI,CAC7D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}