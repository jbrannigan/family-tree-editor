{"ast":null,"code":"import React,{useRef,useState}from\"react\";import\"./TreeEditor.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function TreeEditor(_ref){let{treeText,onTextChange}=_ref;const[softWrap,setSoftWrap]=useState(true);// default on\nconst gutterRef=useRef(null);const taRef=useRef(null);const lineCount=Math.max(1,(treeText.match(/\\n/g)||[]).length+1);const gutterLines=Array.from({length:lineCount},(_,i)=>i+1);const handleScroll=()=>{if(gutterRef.current&&taRef.current){gutterRef.current.scrollTop=taRef.current.scrollTop;}};return/*#__PURE__*/_jsxs(\"div\",{className:\"te-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"te-toolbar\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:softWrap,onChange:e=>setSoftWrap(e.target.checked)}),\" \",\"Soft wrap\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"te-wrap\",children:[/*#__PURE__*/_jsx(\"div\",{ref:gutterRef,className:\"te-gutter\",\"aria-hidden\":\"true\",children:gutterLines.map(n=>/*#__PURE__*/_jsx(\"div\",{className:\"te-line\",children:n},n))}),/*#__PURE__*/_jsx(\"textarea\",{ref:taRef,className:`te-textarea ${softWrap?\"wrap\":\"nowrap\"}`,\"aria-label\":\"Family tree text editor\",value:treeText,onChange:e=>onTextChange(e.target.value),onScroll:handleScroll,spellCheck:false})]})]});}","map":{"version":3,"names":["React","useRef","useState","jsx","_jsx","jsxs","_jsxs","TreeEditor","_ref","treeText","onTextChange","softWrap","setSoftWrap","gutterRef","taRef","lineCount","Math","max","match","length","gutterLines","Array","from","_","i","handleScroll","current","scrollTop","className","children","type","checked","onChange","e","target","ref","map","n","value","onScroll","spellCheck"],"sources":["/home/jbrannigan/src/familytree/src/TreeEditor.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport \"./TreeEditor.css\";\r\n\r\nexport default function TreeEditor({ treeText, onTextChange }) {\r\n  const [softWrap, setSoftWrap] = useState(true); // default on\r\n  const gutterRef = useRef(null);\r\n  const taRef = useRef(null);\r\n\r\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\r\n  const gutterLines = Array.from({ length: lineCount }, (_, i) => i + 1);\r\n\r\n  const handleScroll = () => {\r\n    if (gutterRef.current && taRef.current) {\r\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"te-container\">\r\n      <div className=\"te-toolbar\">\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={softWrap}\r\n            onChange={(e) => setSoftWrap(e.target.checked)}\r\n          />{\" \"}\r\n          Soft wrap\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"te-wrap\">\r\n        <div ref={gutterRef} className=\"te-gutter\" aria-hidden=\"true\">\r\n          {gutterLines.map((n) => (\r\n            <div key={n} className=\"te-line\">\r\n              {n}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <textarea\r\n          ref={taRef}\r\n          className={`te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`}\r\n          aria-label=\"Family tree text editor\"\r\n          value={treeText}\r\n          onChange={(e) => onTextChange(e.target.value)}\r\n          onScroll={handleScroll}\r\n          spellCheck={false}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,MAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,cAAe,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAA6B,IAA5B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAC3D,KAAM,CAACG,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAAE;AAChD,KAAM,CAAAW,SAAS,CAAGZ,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAa,KAAK,CAAGb,MAAM,CAAC,IAAI,CAAC,CAE1B,KAAM,CAAAc,SAAS,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE,CAACR,QAAQ,CAACS,KAAK,CAAC,KAAK,CAAC,EAAI,EAAE,EAAEC,MAAM,CAAG,CAAC,CAAC,CACvE,KAAM,CAAAC,WAAW,CAAGC,KAAK,CAACC,IAAI,CAAC,CAAEH,MAAM,CAAEJ,SAAU,CAAC,CAAE,CAACQ,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAAG,CAAC,CAAC,CAEtE,KAAM,CAAAC,YAAY,CAAGA,CAAA,GAAM,CACzB,GAAIZ,SAAS,CAACa,OAAO,EAAIZ,KAAK,CAACY,OAAO,CAAE,CACtCb,SAAS,CAACa,OAAO,CAACC,SAAS,CAAGb,KAAK,CAACY,OAAO,CAACC,SAAS,CACvD,CACF,CAAC,CAED,mBACErB,KAAA,QAAKsB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BzB,IAAA,QAAKwB,SAAS,CAAC,YAAY,CAAAC,QAAA,cACzBvB,KAAA,UAAAuB,QAAA,eACEzB,IAAA,UACE0B,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEpB,QAAS,CAClBqB,QAAQ,CAAGC,CAAC,EAAKrB,WAAW,CAACqB,CAAC,CAACC,MAAM,CAACH,OAAO,CAAE,CAChD,CAAC,CAAC,GAAG,CAAC,WAET,EAAO,CAAC,CACL,CAAC,cAENzB,KAAA,QAAKsB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBzB,IAAA,QAAK+B,GAAG,CAAEtB,SAAU,CAACe,SAAS,CAAC,WAAW,CAAC,cAAY,MAAM,CAAAC,QAAA,CAC1DT,WAAW,CAACgB,GAAG,CAAEC,CAAC,eACjBjC,IAAA,QAAawB,SAAS,CAAC,SAAS,CAAAC,QAAA,CAC7BQ,CAAC,EADMA,CAEL,CACN,CAAC,CACC,CAAC,cAENjC,IAAA,aACE+B,GAAG,CAAErB,KAAM,CACXc,SAAS,CAAE,eAAejB,QAAQ,CAAG,MAAM,CAAG,QAAQ,EAAG,CACzD,aAAW,yBAAyB,CACpC2B,KAAK,CAAE7B,QAAS,CAChBuB,QAAQ,CAAGC,CAAC,EAAKvB,YAAY,CAACuB,CAAC,CAACC,MAAM,CAACI,KAAK,CAAE,CAC9CC,QAAQ,CAAEd,YAAa,CACvBe,UAAU,CAAE,KAAM,CACnB,CAAC,EACC,CAAC,EACH,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}