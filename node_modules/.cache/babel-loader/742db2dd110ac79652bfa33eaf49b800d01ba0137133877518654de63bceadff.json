{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeEditor.js\",\n  _s = $RefreshSig$();\n// TreeEditor.js\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { parseTree } from \"./utils/parseTree\";\nimport \"./TreeEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEBOUNCE_MS = 150;\nexport default function TreeEditor({\n  treeText,\n  onTextChange\n}) {\n  _s();\n  const [draft, setDraft] = useState(treeText || \"\");\n  const [wrap, setWrap] = useState(true);\n  const [errors, setErrors] = useState([]);\n  const taRef = useRef(null);\n  const gutterRef = useRef(null);\n  const scrollSync = () => {\n    if (!taRef.current || !gutterRef.current) return;\n    gutterRef.current.scrollTop = taRef.current.scrollTop;\n  };\n  // derive lines for gutter\n  const lineCount = Math.max(1, treeText.split(\"\\n\").length);\n  const lines = Array.from({\n    length: lineCount\n  }, (_, i) => i + 1);\n  // keep local draft in sync when parent loads a file\n  useEffect(() => {\n    setDraft(treeText || \"\");\n  }, [treeText]);\n\n  // debounce changes up to parent\n  useEffect(() => {\n    const t = setTimeout(() => {\n      onTextChange === null || onTextChange === void 0 ? void 0 : onTextChange(draft);\n      // quick validation on idle\n      try {\n        parseTree(draft);\n        setErrors([]);\n      } catch (e) {\n        setErrors([String((e === null || e === void 0 ? void 0 : e.message) || e)]);\n      }\n    }, DEBOUNCE_MS);\n    return () => clearTimeout(t);\n  }, [draft, onTextChange]);\n\n  // computed line numbers\n  //  const lines = useMemo(() => draft.split(\"\\n\").length || 1, [draft]);\n  const lineNumbers = useMemo(() => Array.from({\n    length: lines\n  }, (_, i) => i + 1).join(\"\\n\"), [lines]);\n\n  // handle Tab / Shift+Tab and auto-indent on Enter\n  const handleKeyDown = e => {\n    const ta = taRef.current;\n    if (!ta) return;\n\n    // Tab inserts a tab character (or 2 spaces if you prefer)\n    if (e.key === \"Tab\") {\n      e.preventDefault();\n      const {\n        selectionStart,\n        selectionEnd,\n        value\n      } = ta;\n      const insert = \"\\t\";\n      const next = value.slice(0, selectionStart) + insert + value.slice(selectionEnd);\n      const caret = selectionStart + insert.length;\n      setDraft(next);\n      requestAnimationFrame(() => {\n        ta.selectionStart = ta.selectionEnd = caret;\n      });\n      return;\n    }\n\n    // Auto-indent on Enter: copy leading whitespace of current line\n    if (e.key === \"Enter\") {\n      var _currentLine$match$, _currentLine$match;\n      const {\n        selectionStart,\n        selectionEnd,\n        value\n      } = ta;\n      if (selectionStart !== selectionEnd) return; // let default handle multi-line selection\n      const before = value.slice(0, selectionStart);\n      const after = value.slice(selectionStart);\n      const lineStart = before.lastIndexOf(\"\\n\") + 1;\n      const currentLine = before.slice(lineStart);\n      const leadingWS = (_currentLine$match$ = (_currentLine$match = currentLine.match(/^[\\t ]*/)) === null || _currentLine$match === void 0 ? void 0 : _currentLine$match[0]) !== null && _currentLine$match$ !== void 0 ? _currentLine$match$ : \"\";\n      const next = before + \"\\n\" + leadingWS + after;\n      e.preventDefault();\n      setDraft(next);\n      requestAnimationFrame(() => {\n        const pos = selectionStart + 1 + leadingWS.length;\n        ta.selectionStart = ta.selectionEnd = pos;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"te-root\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"te-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: wrap,\n          onChange: e => setWrap(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \"Soft wrap\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), errors.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"te-status te-status-error\",\n        children: \"Parse issues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : draft.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"te-status te-status-ok\",\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-shell\",\n      children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"te-gutter\",\n        ref: gutterRef,\n        \"aria-hidden\": \"true\",\n        children: lineNumbers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: taRef,\n        className: \"te-textarea\",\n        value: draft,\n        onChange: e => setDraft(e.target.value),\n        onKeyDown: handleKeyDown,\n        onScroll: scrollSync,\n        spellCheck: false,\n        wrap: wrap ? \"soft\" : \"off\",\n        placeholder: \"Paste or edit your tab-indented tree here\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-errors\",\n      role: \"alert\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Validation:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: errors.map((err, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeEditor, \"VIUKwRl3kKB7E/d+Wt+t9YbzRyE=\");\n_c = TreeEditor;\nvar _c;\n$RefreshReg$(_c, \"TreeEditor\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","parseTree","jsxDEV","_jsxDEV","DEBOUNCE_MS","TreeEditor","treeText","onTextChange","_s","draft","setDraft","wrap","setWrap","errors","setErrors","taRef","gutterRef","scrollSync","current","scrollTop","lineCount","Math","max","split","length","lines","Array","from","_","i","t","setTimeout","e","String","message","clearTimeout","lineNumbers","join","handleKeyDown","ta","key","preventDefault","selectionStart","selectionEnd","value","insert","next","slice","caret","requestAnimationFrame","_currentLine$match$","_currentLine$match","before","after","lineStart","lastIndexOf","currentLine","leadingWS","match","pos","className","children","type","checked","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","ref","onKeyDown","onScroll","spellCheck","placeholder","role","map","err","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeEditor.js"],"sourcesContent":["// TreeEditor.js\r\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport \"./TreeEditor.css\";\r\n\r\nconst DEBOUNCE_MS = 150;\r\n\r\nexport default function TreeEditor({ treeText, onTextChange }) {\r\n  const [draft, setDraft] = useState(treeText || \"\");\r\n  const [wrap, setWrap] = useState(true);\r\n  const [errors, setErrors] = useState([]);\r\n  const taRef = useRef(null);\r\n  const gutterRef = useRef(null);\r\n  \r\n  const scrollSync = () => {\r\n    if (!taRef.current || !gutterRef.current) return;\r\n    gutterRef.current.scrollTop = taRef.current.scrollTop;\r\n  };\r\n  // derive lines for gutter\r\n  const lineCount = Math.max(1, treeText.split(\"\\n\").length);\r\n  const lines = Array.from({ length: lineCount }, (_, i) => i + 1);\r\n  // keep local draft in sync when parent loads a file\r\n  useEffect(() => {\r\n    setDraft(treeText || \"\");\r\n  }, [treeText]);\r\n\r\n  // debounce changes up to parent\r\n  useEffect(() => {\r\n    const t = setTimeout(() => {\r\n      onTextChange?.(draft);\r\n      // quick validation on idle\r\n      try {\r\n        parseTree(draft);\r\n        setErrors([]);\r\n      } catch (e) {\r\n        setErrors([String(e?.message || e)]);\r\n      }\r\n    }, DEBOUNCE_MS);\r\n    return () => clearTimeout(t);\r\n  }, [draft, onTextChange]);\r\n\r\n  // computed line numbers\r\n//  const lines = useMemo(() => draft.split(\"\\n\").length || 1, [draft]);\r\n  const lineNumbers = useMemo(\r\n    () => Array.from({ length: lines }, (_, i) => i + 1).join(\"\\n\"),\r\n    [lines]\r\n  );\r\n\r\n  // handle Tab / Shift+Tab and auto-indent on Enter\r\n  const handleKeyDown = (e) => {\r\n    const ta = taRef.current;\r\n    if (!ta) return;\r\n\r\n    // Tab inserts a tab character (or 2 spaces if you prefer)\r\n    if (e.key === \"Tab\") {\r\n      e.preventDefault();\r\n      const { selectionStart, selectionEnd, value } = ta;\r\n      const insert = \"\\t\";\r\n      const next = value.slice(0, selectionStart) + insert + value.slice(selectionEnd);\r\n      const caret = selectionStart + insert.length;\r\n      setDraft(next);\r\n      requestAnimationFrame(() => {\r\n        ta.selectionStart = ta.selectionEnd = caret;\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Auto-indent on Enter: copy leading whitespace of current line\r\n    if (e.key === \"Enter\") {\r\n      const { selectionStart, selectionEnd, value } = ta;\r\n      if (selectionStart !== selectionEnd) return; // let default handle multi-line selection\r\n      const before = value.slice(0, selectionStart);\r\n      const after = value.slice(selectionStart);\r\n      const lineStart = before.lastIndexOf(\"\\n\") + 1;\r\n      const currentLine = before.slice(lineStart);\r\n      const leadingWS = currentLine.match(/^[\\t ]*/)?.[0] ?? \"\";\r\n      const next = before + \"\\n\" + leadingWS + after;\r\n      e.preventDefault();\r\n      setDraft(next);\r\n      requestAnimationFrame(() => {\r\n        const pos = selectionStart + 1 + leadingWS.length;\r\n        ta.selectionStart = ta.selectionEnd = pos;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"te-root\">\r\n      <div className=\"te-toolbar\">\r\n        <label className=\"te-wrap\">\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={wrap}\r\n            onChange={(e) => setWrap(e.target.checked)}\r\n          />\r\n          Soft wrap\r\n        </label>\r\n        {errors.length > 0 ? (\r\n          <span className=\"te-status te-status-error\">Parse issues</span>\r\n        ) : draft.length ? (\r\n          <span className=\"te-status te-status-ok\">OK</span>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"te-shell\">\r\n        <pre\r\n          className=\"te-gutter\"\r\n          ref={gutterRef}\r\n          aria-hidden=\"true\"\r\n        >\r\n{lineNumbers}\r\n        </pre>\r\n\r\n        <textarea\r\n          ref={taRef}\r\n          className=\"te-textarea\"\r\n          value={draft}\r\n          onChange={(e) => setDraft(e.target.value)}\r\n          onKeyDown={handleKeyDown}\r\n          onScroll={scrollSync}\r\n          spellCheck={false}\r\n          wrap={wrap ? \"soft\" : \"off\"}\r\n          placeholder=\"Paste or edit your tab-indented tree here…\"\r\n        />\r\n      </div>\r\n\r\n      {errors.length > 0 && (\r\n        <div className=\"te-errors\" role=\"alert\">\r\n          <strong>Validation:</strong>\r\n          <ul>\r\n            {errors.map((err, i) => (\r\n              <li key={i}>{err}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}