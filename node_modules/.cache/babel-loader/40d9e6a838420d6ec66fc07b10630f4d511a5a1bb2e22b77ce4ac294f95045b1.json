{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/TreeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport \"./TreeEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TreeEditor({\n  treeText,\n  onTextChange\n}) {\n  _s();\n  const [softWrap, setSoftWrap] = useState(true); // default on\n  const gutterRef = useRef(null);\n  const taRef = useRef(null);\n  const [cursorLine, setCursorLine] = useState(1);\n\n  // put near your other handlers in TreeEditor.js\n  const NL = '\\n';\n  const updateCursorLine = () => {\n    const ta = taRef.current;\n    if (!ta) return;\n    const pos = typeof ta.selectionStart === 'number' ? ta.selectionStart : 0;\n    const upto = treeText.slice(0, pos).split(NL).length;\n    setCursorLine(upto);\n  };\n  const handleKeyDown = e => {\n    if (e.key !== \"Tab\" || !taRef.current) return;\n    e.preventDefault();\n    const ta = taRef.current;\n    const start = ta.selectionStart;\n    const end = ta.selectionEnd;\n    const text = treeText;\n    const lineStart = text.lastIndexOf(NL, selStart - 1) + 1;\n    const lineEnd = text.indexOf(NL, selEnd);\n    const sliceEnd = lineEnd === -1 ? text.length : lineEnd;\n    const before = text.slice(0, lineStart);\n    const middle = text.slice(lineStart, sliceEnd);\n    const after = text.slice(sliceEnd);\n    if (e.shiftKey) {\n      // outdent: remove one leading tab or up to 4 spaces per line\n      const out = middle.replace(/^(?:\\t| {1,4})/gm, \"\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(Math.max(selStart - 1, lineStart), Math.max(selEnd - 1, lineStart));\n      });\n    } else {\n      // indent: add one tab to each selected line\n      const lines = (middle.match(/\\n/g) || []).length + 1;\n      const out = middle.replace(/^/gm, \"\\t\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(selStart + 1, selEnd + lines);\n      });\n    }\n  };\n  const handleDrop = async e => {\n    var _e$dataTransfer, _e$dataTransfer$files;\n    e.preventDefault();\n    const file = (_e$dataTransfer = e.dataTransfer) === null || _e$dataTransfer === void 0 ? void 0 : (_e$dataTransfer$files = _e$dataTransfer.files) === null || _e$dataTransfer$files === void 0 ? void 0 : _e$dataTransfer$files[0];\n    if (!file) return;\n    const text = await file.text();\n    onTextChange(text);\n  };\n  const handleDragOver = e => e.preventDefault();\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\n  const gutterLines = Array.from({\n    length: lineCount\n  }, (_, i) => i + 1);\n  const handleScroll = () => {\n    if (gutterRef.current && taRef.current) {\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"te-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-toolbar\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: softWrap,\n          onChange: e => setSoftWrap(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \" \", \"Soft wrap\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"te-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: gutterRef,\n        className: \"te-gutter\",\n        \"aria-hidden\": \"true\",\n        children: gutterLines.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"te-line\",\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        ref: taRef,\n        className: `te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`,\n        \"aria-label\": \"Family tree text editor\",\n        value: treeText,\n        onChange: e => onTextChange(e.target.value),\n        onScroll: handleScroll,\n        onClick: updateCursorLine,\n        onKeyUp: updateCursorLine,\n        onSelect: updateCursorLine,\n        onKeyDown: handleKeyDown,\n        spellCheck: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(TreeEditor, \"AKrTjhE9/q5Ybj4ZgrKGd5guQYo=\");\n_c = TreeEditor;\nvar _c;\n$RefreshReg$(_c, \"TreeEditor\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","TreeEditor","treeText","onTextChange","_s","softWrap","setSoftWrap","gutterRef","taRef","cursorLine","setCursorLine","NL","updateCursorLine","ta","current","pos","selectionStart","upto","slice","split","length","handleKeyDown","e","key","preventDefault","start","end","selectionEnd","text","lineStart","lastIndexOf","selStart","lineEnd","indexOf","selEnd","sliceEnd","before","middle","after","shiftKey","out","replace","requestAnimationFrame","setSelectionRange","Math","max","lines","match","handleDrop","_e$dataTransfer","_e$dataTransfer$files","file","dataTransfer","files","handleDragOver","lineCount","gutterLines","Array","from","_","i","handleScroll","scrollTop","className","children","type","checked","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","n","value","onScroll","onClick","onKeyUp","onSelect","onKeyDown","spellCheck","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/TreeEditor.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./TreeEditor.css\";\n\nexport default function TreeEditor({ treeText, onTextChange }) {\n  const [softWrap, setSoftWrap] = useState(true); // default on\n  const gutterRef = useRef(null);\n  const taRef = useRef(null);\n\n  const [cursorLine, setCursorLine] = useState(1);\n\n  // put near your other handlers in TreeEditor.js\n  const NL = '\\n';\n\n  const updateCursorLine = () => {\n    const ta = taRef.current;\n    if (!ta) return;\n    const pos = typeof ta.selectionStart === 'number' ? ta.selectionStart : 0;\n    const upto = treeText.slice(0, pos).split(NL).length;\n    setCursorLine(upto);\n  };\n\n\n  const handleKeyDown = (e) => {\n    if (e.key !== \"Tab\" || !taRef.current) return;\n    e.preventDefault();\n\n    const ta = taRef.current;\n    const start = ta.selectionStart;\n    const end = ta.selectionEnd;\n\n    const text = treeText;\n    const lineStart = text.lastIndexOf(NL, selStart - 1) + 1;\n    const lineEnd = text.indexOf(NL, selEnd);\n    const sliceEnd = lineEnd === -1 ? text.length : lineEnd;\n\n    const before = text.slice(0, lineStart);\n    const middle = text.slice(lineStart, sliceEnd);\n    const after = text.slice(sliceEnd);\n\n    if (e.shiftKey) {\n      // outdent: remove one leading tab or up to 4 spaces per line\n      const out = middle.replace(/^(?:\\t| {1,4})/gm, \"\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(\n          Math.max(selStart - 1, lineStart),\n          Math.max(selEnd - 1, lineStart),\n        );\n      });\n    } else {\n      // indent: add one tab to each selected line\n      const lines = (middle.match(/\\n/g) || []).length + 1;\n      const out = middle.replace(/^/gm, \"\\t\");\n      onTextChange(before + out + after);\n      requestAnimationFrame(() => {\n        ta.setSelectionRange(selStart + 1, selEnd + lines);\n      });\n    }\n  };\n\n  const handleDrop = async (e) => {\n    e.preventDefault();\n    const file = e.dataTransfer?.files?.[0];\n    if (!file) return;\n    const text = await file.text();\n    onTextChange(text);\n  };\n  const handleDragOver = (e) => e.preventDefault();\n  const lineCount = Math.max(1, (treeText.match(/\\n/g) || []).length + 1);\n  const gutterLines = Array.from({ length: lineCount }, (_, i) => i + 1);\n\n  const handleScroll = () => {\n    if (gutterRef.current && taRef.current) {\n      gutterRef.current.scrollTop = taRef.current.scrollTop;\n    }\n  };\n\n  return (\n    <div className=\"te-container\">\n      <div className=\"te-toolbar\">\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={softWrap}\n            onChange={(e) => setSoftWrap(e.target.checked)}\n          />{\" \"}\n          Soft wrap\n        </label>\n      </div>\n\n      <div className=\"te-wrap\">\n        <div ref={gutterRef} className=\"te-gutter\" aria-hidden=\"true\">\n          {gutterLines.map((n) => (\n            <div key={n} className=\"te-line\">\n              {n}\n            </div>\n          ))}\n        </div>\n\n        <textarea\n          ref={taRef}\n          className={`te-textarea ${softWrap ? \"wrap\" : \"nowrap\"}`}\n          aria-label=\"Family tree text editor\"\n          value={treeText}\n          onChange={(e) => onTextChange(e.target.value)}\n          onScroll={handleScroll}\n          onClick={updateCursorLine}\n          onKeyUp={updateCursorLine}\n          onSelect={updateCursorLine}\n          onKeyDown={handleKeyDown}\n          spellCheck={false}\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}