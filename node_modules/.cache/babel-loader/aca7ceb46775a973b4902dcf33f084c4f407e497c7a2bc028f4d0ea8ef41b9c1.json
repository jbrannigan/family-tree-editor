{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TreeEditor from \"./TreeEditor\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]); // full parsed tree (array)\n  const [focusedNode, setFocusedNode] = useState(null); // node object when focused\n  const [exportFocused, setExportFocused] = useState(true);\n\n  // Width of the left (editor) pane in pixels. Starts at 50%.\n  const containerRef = useRef(null);\n  const [leftWidth, setLeftWidth] = useState(0); // 0 means \"compute 50% on mount\"\n  const [dragging, setDragging] = useState(false);\n  useEffect(() => {\n    // Initialize leftWidth to half of the container width on first render\n    if (leftWidth === 0 && containerRef.current) {\n      const w = containerRef.current.clientWidth;\n      setLeftWidth(Math.round(w * 0.5));\n    }\n  }, [leftWidth]);\n  useEffect(() => {\n    const onMove = e => {\n      if (!dragging || !containerRef.current) return;\n      const bounds = containerRef.current.getBoundingClientRect();\n      // Clamp to [min, max] so panes can’t collapse or overlap\n      const min = 220; // min editor width\n      const max = bounds.width - 220; // min tree width\n      const x = Math.min(max, Math.max(min, e.clientX - bounds.left));\n      setLeftWidth(x);\n    };\n    const onUp = () => setDragging(false);\n    if (dragging) {\n      window.addEventListener(\"mousemove\", onMove);\n      window.addEventListener(\"mouseup\", onUp);\n    }\n    return () => {\n      window.removeEventListener(\"mousemove\", onMove);\n      window.removeEventListener(\"mouseup\", onUp);\n    };\n  }, [dragging]);\n  // Parse text -> tree\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText) || [];\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Error parsing tree:\", err);\n      setTreeData([]);\n    }\n  }, [treeText]);\n\n  // Helper: returns like \"-05AUG2025-2310\"\n  const tsSuffix = () => {\n    const d = new Date();\n    const dd = String(d.getDate()).padStart(2, \"0\");\n    const months = [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"];\n    const mmm = months[d.getMonth()];\n    const yyyy = d.getFullYear();\n    const hh = String(d.getHours()).padStart(2, \"0\");\n    const mm = String(d.getMinutes()).padStart(2, \"0\");\n    return `-${dd}${mmm}${yyyy}-${hh}${mm}`;\n  };\n\n  // File + editor handlers\n  const handleFileLoad = text => setTreeText(text);\n  const handleTextChange = text => setTreeText(text);\n\n  // Focus handlers\n  const handleFocus = node => setFocusedNode(node);\n  const handleUnfocus = () => setFocusedNode(null);\n\n  // What to render (focused sub-tree vs full tree)\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n\n  // Downloads\n  const handleDownloadHTML = () => {\n    const usedTree = exportFocused ? displayedTree : treeData;\n    // Use treeData for HTML export of whole source text doc; \n    // change to displayedTree if you want export to respect focus\n    // const html = generateHTML(usedTree); // <-Full Tree\n    const html = generateHTML(usedTree); // <-Foces Tree\n    const blob = new Blob([html], {\n      type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree${tsSuffix()}.html`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  // NEW: save edited text as .txt\n  const handleDownloadTXT = () => {\n    const blob = new Blob([treeText !== null && treeText !== void 0 ? treeText : \"\"], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree_text${tsSuffix()}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadJSON = () => {\n    const usedTree = exportFocused ? displayedTree : treeData;\n    // Use treeData for JSON export of whole source text doc; \n    // change to displayedTree if you want export to respect focus\n    //const json = JSON.stringify(usedTree, null, 2); //<-Full Tree\n    const json = JSON.stringify(usedTree, null, 2); //<-Focues Tree\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree${tsSuffix()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadSVG = () => {\n    // Assumes GraphView sets id=\"graph-svg\" on the <svg>. No-op if not present.\n    const svgEl = document.getElementById(\"graph-svg\");\n    if (!svgEl) {\n      console.warn(\"SVG element not found for download.\");\n      return;\n    }\n    const serializer = new XMLSerializer();\n    const source = serializer.serializeToString(svgEl);\n    const blob = new Blob([source], {\n      type: \"image/svg+xml\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree${tsSuffix()}.svg`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const normalizeTextIndentation = t => (t !== null && t !== void 0 ? t : \"\").split(\"\\n\").map(line => {\n    var _line$match$, _line$match;\n    const m = (_line$match$ = (_line$match = line.match(/^[ \\t]*/)) === null || _line$match === void 0 ? void 0 : _line$match[0]) !== null && _line$match$ !== void 0 ? _line$match$ : \"\";\n    const tabs = m.replace(/ {4}/g, \"\\t\").replace(/ +(?=\\t)/g, \"\");\n    return tabs + line.slice(m.length);\n  }).join(\"\\n\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n        className: \"btn btn-primary\",\n        onLoad: handleFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"checkbox\",\n        style: {\n          display: \"inline-flex\",\n          alignItems: \"center\",\n          gap: 6,\n          marginLeft: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: exportFocused,\n          onChange: e => setExportFocused(e.target.checked),\n          \"aria-label\": \"Export focused view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Export focused view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleDownloadTXT,\n        \"aria-label\": \"Save Edited Text\",\n        children: \"Save Edited Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleDownloadHTML,\n        \"aria-label\": \"Download HTML\",\n        children: \"Download HTML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleDownloadSVG,\n        \"aria-label\": \"Download SVG\",\n        children: \"Download SVG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleDownloadJSON,\n        \"aria-label\": \"Download JSON\",\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => setTreeText(normalizeTextIndentation(treeText)),\n        children: \"Normalize indentation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 3\n      }, this), focusedNode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-ghost\",\n        onClick: handleUnfocus,\n        \"aria-label\": \"Unfocus\",\n        title: \"Unfocus\",\n        children: \"Unfocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split\",\n      ref: containerRef,\n      style: {\n        minHeight: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane left-pane\",\n        style: {\n          width: leftWidth || \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Tree Text Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(TreeEditor, {\n          treeText: treeText,\n          onTextChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `resizer ${dragging ? \"dragging\" : \"\"}`,\n        role: \"separator\",\n        \"aria-label\": \"Resize editor and tree panes\",\n        \"aria-orientation\": \"vertical\",\n        tabIndex: 0,\n        onMouseDown: () => setDragging(true),\n        onKeyDown: e => {\n          // keyboard nudges for accessibility\n          if (e.key === \"ArrowLeft\") setLeftWidth(w => Math.max(220, w - 16));\n          if (e.key === \"ArrowRight\" && containerRef.current) {\n            const max = containerRef.current.clientWidth - 220;\n            setLeftWidth(w => Math.min(max, w + 16));\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane right-pane\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: 0\n          },\n          children: \"Tree View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click on \\uD83D\\uDD0D to focus on a part of the tree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"This will then be reflected in the SVG Tree Diagram, below\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"When the Tree View is focused, the downloaded file(s) will also reflect the focused view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Afterwards, use the \\\"Unfocus\\\" button to restore the full view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          onUnfocus: handleUnfocus,\n          focusedNodeId: focusedNode ? focusedNode.id : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(GraphView, {\n        tree: displayedTree\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3gHcHymPZaNn8gKqFwdli9QVFA8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TreeEditor","TreeView","GraphView","UploadButton","DownloadButtons","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","focusedNode","setFocusedNode","exportFocused","setExportFocused","containerRef","leftWidth","setLeftWidth","dragging","setDragging","current","w","clientWidth","Math","round","onMove","e","bounds","getBoundingClientRect","min","max","width","x","clientX","left","onUp","window","addEventListener","removeEventListener","parsed","err","console","error","tsSuffix","d","Date","dd","String","getDate","padStart","months","mmm","getMonth","yyyy","getFullYear","hh","getHours","mm","getMinutes","handleFileLoad","text","handleTextChange","handleFocus","node","handleUnfocus","displayedTree","handleDownloadHTML","usedTree","html","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDownloadTXT","handleDownloadJSON","json","JSON","stringify","handleDownloadSVG","svgEl","getElementById","warn","serializer","XMLSerializer","source","serializeToString","normalizeTextIndentation","t","split","map","line","_line$match$","_line$match","m","match","tabs","replace","slice","length","join","className","style","padding","children","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","marginLeft","checked","onChange","target","onClick","title","ref","minHeight","marginTop","onTextChange","role","tabIndex","onMouseDown","onKeyDown","key","tree","onFocus","onUnfocus","focusedNodeId","id","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport TreeEditor from \"./TreeEditor\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [treeText, setTreeText] = useState(\"\");\n  const [treeData, setTreeData] = useState([]);           // full parsed tree (array)\n  const [focusedNode, setFocusedNode] = useState(null);   // node object when focused\n  const [exportFocused, setExportFocused] = useState(true);\n\n// Width of the left (editor) pane in pixels. Starts at 50%.\nconst containerRef = useRef(null);\nconst [leftWidth, setLeftWidth] = useState(0); // 0 means \"compute 50% on mount\"\nconst [dragging, setDragging] = useState(false);\n\nuseEffect(() => {\n  // Initialize leftWidth to half of the container width on first render\n  if (leftWidth === 0 && containerRef.current) {\n    const w = containerRef.current.clientWidth;\n    setLeftWidth(Math.round(w * 0.5));\n  }\n}, [leftWidth]);\n\nuseEffect(() => {\n  const onMove = (e) => {\n    if (!dragging || !containerRef.current) return;\n    const bounds = containerRef.current.getBoundingClientRect();\n    // Clamp to [min, max] so panes can’t collapse or overlap\n    const min = 220;                          // min editor width\n    const max = bounds.width - 220;           // min tree width\n    const x = Math.min(max, Math.max(min, e.clientX - bounds.left));\n    setLeftWidth(x);\n  };\n\n  const onUp = () => setDragging(false);\n\n  if (dragging) {\n    window.addEventListener(\"mousemove\", onMove);\n    window.addEventListener(\"mouseup\", onUp);\n  }\n  return () => {\n    window.removeEventListener(\"mousemove\", onMove);\n    window.removeEventListener(\"mouseup\", onUp);\n  };\n}, [dragging]); \n  // Parse text -> tree\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText) || [];\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Error parsing tree:\", err);\n      setTreeData([]);\n    }\n  }, [treeText]);\n\n  // Helper: returns like \"-05AUG2025-2310\"\n  const tsSuffix = () => {\n    const d = new Date();\n    const dd = String(d.getDate()).padStart(2, \"0\");\n    const months = [\"JAN\",\"FEB\",\"MAR\",\"APR\",\"MAY\",\"JUN\",\"JUL\",\"AUG\",\"SEP\",\"OCT\",\"NOV\",\"DEC\"];\n    const mmm = months[d.getMonth()];\n    const yyyy = d.getFullYear();\n    const hh = String(d.getHours()).padStart(2, \"0\");\n    const mm = String(d.getMinutes()).padStart(2, \"0\");\n    return `-${dd}${mmm}${yyyy}-${hh}${mm}`;\n  };\n\n  // File + editor handlers\n  const handleFileLoad = (text) => setTreeText(text);\n  const handleTextChange = (text) => setTreeText(text);\n\n  // Focus handlers\n  const handleFocus = (node) => setFocusedNode(node);\n  const handleUnfocus = () => setFocusedNode(null);\n\n  // What to render (focused sub-tree vs full tree)\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n\n  // Downloads\n  const handleDownloadHTML = () => {\n    const usedTree = exportFocused ? displayedTree : treeData;\n    // Use treeData for HTML export of whole source text doc; \n    // change to displayedTree if you want export to respect focus\n    // const html = generateHTML(usedTree); // <-Full Tree\n    const html = generateHTML(usedTree); // <-Foces Tree\n    const blob = new Blob([html], { type: \"text/html\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree${tsSuffix()}.html`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n// NEW: save edited text as .txt\n  const handleDownloadTXT = () => {\n    const blob = new Blob([treeText ?? \"\"], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree_text${tsSuffix()}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadJSON = () => {\n    const usedTree = exportFocused ? displayedTree : treeData;\n    // Use treeData for JSON export of whole source text doc; \n    // change to displayedTree if you want export to respect focus\n    //const json = JSON.stringify(usedTree, null, 2); //<-Full Tree\n    const json = JSON.stringify(usedTree, null, 2); //<-Focues Tree\n    const blob = new Blob([json], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree${tsSuffix()}.json`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleDownloadSVG = () => {\n    // Assumes GraphView sets id=\"graph-svg\" on the <svg>. No-op if not present.\n    const svgEl = document.getElementById(\"graph-svg\");\n    if (!svgEl) {\n      console.warn(\"SVG element not found for download.\");\n      return;\n    }\n    const serializer = new XMLSerializer();\n    const source = serializer.serializeToString(svgEl);\n    const blob = new Blob([source], { type: \"image/svg+xml\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `family_tree${tsSuffix()}.svg`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  \n  const normalizeTextIndentation = (t) =>\n  (t ?? \"\").split(\"\\n\").map(line => {\n    const m = line.match(/^[ \\t]*/)?.[0] ?? \"\";\n    const tabs = m.replace(/ {4}/g, \"\\t\").replace(/ +(?=\\t)/g, \"\");\n    return tabs + line.slice(m.length);\n  }).join(\"\\n\");\n\n\n  return (\n    <div className=\"app-container\" style={{ padding: \"1rem\" }}>\n      {/* Header / toolbar */}\n      <div className=\"top-bar\">\n\n        <UploadButton className= \"btn btn-primary\" onLoad={handleFileLoad} />\n\n        {/* Export behavior toggle */}\n        <label className=\"checkbox\" style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6, marginLeft: 8 }}>\n          <input\n            type=\"checkbox\"\n            checked={exportFocused}\n            onChange={(e) => setExportFocused(e.target.checked)}\n            aria-label=\"Export focused view\"\n          />\n          <span>Export focused view</span>\n        </label>\n    \n        <button className=\"btn\" onClick={handleDownloadTXT} aria-label=\"Save Edited Text\">\n          Save Edited Text\n       </button>\n      \n        <button className=\"btn\" onClick={handleDownloadHTML} aria-label=\"Download HTML\">\n          Download HTML\n        </button>\n\n        <button className=\"btn\" onClick={handleDownloadSVG} aria-label=\"Download SVG\">\n          Download SVG\n        </button>\n\n        <button className=\"btn\" onClick={handleDownloadJSON} aria-label=\"Download JSON\">\n          Download JSON\n        </button>\n\n        <button className=\"btn\" onClick={() => setTreeText(normalizeTextIndentation(treeText))}>\n          Normalize indentation\n        </button>\n\n\n  {/* push Unfocus to the right (optional) */}\n  <div className=\"spacer\" />\n\n  {focusedNode && (\n    <button\n      className=\"btn btn-ghost\"\n      onClick={handleUnfocus}\n      aria-label=\"Unfocus\"\n      title=\"Unfocus\"\n    >\n      Unfocus\n    </button>\n  )}\n  </div>\n\n{/* Top split: editor + tree with resizer */}\n<div\n  className=\"split\"\n  ref={containerRef}\n  style={{ minHeight: 300 }}\n>\n  <div\n    className=\"pane left-pane\"\n    style={{ width: leftWidth || \"50%\" }}\n  >\n    <h3 style={{ marginTop: 0 }}>Tree Text Editor</h3>\n    <TreeEditor treeText={treeText} onTextChange={handleTextChange} />\n  </div>\n\n  <div\n    className={`resizer ${dragging ? \"dragging\" : \"\"}`}\n    role=\"separator\"\n    aria-label=\"Resize editor and tree panes\"\n    aria-orientation=\"vertical\"\n    tabIndex={0}\n    onMouseDown={() => setDragging(true)}\n    onKeyDown={(e) => {\n      // keyboard nudges for accessibility\n      if (e.key === \"ArrowLeft\") setLeftWidth((w) => Math.max(220, w - 16));\n      if (e.key === \"ArrowRight\" && containerRef.current) {\n        const max = containerRef.current.clientWidth - 220;\n        setLeftWidth((w) => Math.min(max, w + 16));\n      }\n    }}\n  />\n\n  <div className=\"pane right-pane\">\n    <h3 style={{ marginTop: 0 }}>Tree View</h3>\n    <p>Click on 🔍 to focus on a part of the tree</p>\n    <li>This will then be reflected in the SVG Tree Diagram, below</li>\n    <li>When the Tree View is focused, the downloaded file(s) will also reflect the focused view</li>\n    <li>Afterwards, use the \"Unfocus\" button to restore the full view</li>\n    <br></br>\n    <TreeView\n      tree={displayedTree}\n      onFocus={handleFocus}\n      onUnfocus={handleUnfocus}\n      focusedNodeId={focusedNode ? focusedNode.id : null}\n    />\n  </div>\n</div>\n\n      {/* Bottom: SVG view */}\n      <div style={{ marginTop: 16 }}>\n        <GraphView tree={displayedTree} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}