{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/UploadButton.js\",\n  _s = $RefreshSig$();\n// UploadButton.js\nimport React, { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadButton({\n  onLoad\n}) {\n  _s();\n  const inputRef = useRef(null);\n  const openPicker = () => {\n    // Guard in case something steals focus or the ref isn't ready yet\n    if (inputRef.current) inputRef.current.click();\n  };\n  const handleChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (typeof onLoad === \"function\") onLoad(String(reader.result || \"\"));\n      // reset so picking the same file again still fires change\n      e.target.value = \"\";\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-flex\",\n      gap: 8,\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: openPicker,\n      children: \"Choose File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"file\",\n      accept: \".txt\",\n      onChange: handleChange,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadButton, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = UploadButton;\nvar _c;\n$RefreshReg$(_c, \"UploadButton\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","UploadButton","onLoad","_s","inputRef","openPicker","current","click","handleChange","e","_e$target$files","file","target","files","reader","FileReader","onload","String","result","value","readAsText","style","display","gap","alignItems","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","onChange","_c","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/UploadButton.js"],"sourcesContent":["// UploadButton.js\r\nimport React, { useRef } from \"react\";\r\n\r\nexport default function UploadButton({ onLoad }) {\r\n  const inputRef = useRef(null);\r\n\r\n  const openPicker = () => {\r\n    // Guard in case something steals focus or the ref isn't ready yet\r\n    if (inputRef.current) inputRef.current.click();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (typeof onLoad === \"function\") onLoad(String(reader.result || \"\"));\r\n      // reset so picking the same file again still fires change\r\n      e.target.value = \"\";\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: \"inline-flex\", gap: 8, alignItems: \"center\" }}>\r\n      <button type=\"button\" onClick={openPicker}>\r\n        Choose File\r\n      </button>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        accept=\".txt\"\r\n        onChange={handleChange}\r\n        style={{ display: \"none\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC/C,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,IAAID,QAAQ,CAACE,OAAO,EAAEF,QAAQ,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAAA,IAAAC,eAAA;IAC1B,MAAMC,IAAI,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAI,CAACC,IAAI,EAAE;IACX,MAAMG,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACE,MAAM,GAAG,MAAM;MACpB,IAAI,OAAOd,MAAM,KAAK,UAAU,EAAEA,MAAM,CAACe,MAAM,CAACH,MAAM,CAACI,MAAM,IAAI,EAAE,CAAC,CAAC;MACrE;MACAT,CAAC,CAACG,MAAM,CAACO,KAAK,GAAG,EAAE;IACrB,CAAC;IACDL,MAAM,CAACM,UAAU,CAACT,IAAI,CAAC;EACzB,CAAC;EAED,oBACEX,OAAA;IAAKqB,KAAK,EAAE;MAAEC,OAAO,EAAE,aAAa;MAAEC,GAAG,EAAE,CAAC;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnEzB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAEtB,UAAW;MAAAoB,QAAA,EAAC;IAE3C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/B,OAAA;MACEgC,GAAG,EAAE5B,QAAS;MACdsB,IAAI,EAAC,MAAM;MACXO,MAAM,EAAC,MAAM;MACbC,QAAQ,EAAE1B,YAAa;MACvBa,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC5B,EAAA,CAlCuBF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}