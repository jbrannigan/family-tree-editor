{"ast":null,"code":"var _jsxFileName = \"/home/jbrannigan/src/familytree/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport TreeView from \"./TreeView\";\nimport GraphView from \"./GraphView\";\nimport UploadButton from \"./UploadButton\";\nimport DownloadButtons from \"./DownloadButtons\";\nimport TreeEditor from \"./TreeEditor\";\nimport { parseTree } from \"./utils/parseTree\";\nimport { generateHTML } from \"./utils/generateHTML\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [treeText, setTreeText] = useState([]);\n  const [treeData, setTreeData] = useState([]);\n  const [focusedNode, setFocusedNode] = useState(null);\n  const displayedTree = focusedNode ? [focusedNode] : treeData;\n  useEffect(() => {\n    try {\n      const parsed = parseTree(treeText);\n      setTreeData(parsed);\n    } catch (err) {\n      console.error(\"Failed to parse tree:\", err);\n    }\n  }, [treeText]);\n  const handleTextChange = e => setTreeText(e.target.value);\n  const handleFileLoad = text => setTreeText(text);\n  const handleFocus = node => setPinnedId(node.id);\n  const handleUnFocus = () => setPinnedId(null);\n  const handleDownloadHTML = () => {\n    const html = generateHTML(displayedTree);\n    const blob = new Blob([html], {\n      type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"family_tree.html\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadJSON = () => {\n    const json = JSON.stringify(displayedTree, null, 2);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"family_tree.json\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-bar\",\n      children: [/*#__PURE__*/_jsxDEV(UploadButton, {\n        onLoad: handleFileLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnfocus,\n        disabled: !focusedNodeId,\n        children: \"Unfocus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n        tree: treeData,\n        treeText: treeText,\n        onDownloadHTML: handleDownloadHTML,\n        onDownloadJSON: handleDownloadJSON,\n        onDownloadSVG: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane\",\n        children: /*#__PURE__*/_jsxDEV(TreeEditor, {\n          treeText: treeText,\n          setTreeText: setTreeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pane\",\n        children: [/*#__PURE__*/_jsxDEV(TreeView, {\n          tree: displayedTree,\n          onFocus: handleFocus,\n          onUnFocus: handleUnFocus,\n          focusedNodeId: pinnedId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GraphView, {\n          tree: displayedTree\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lpeB57g6PMfwnXTsqgT+56c+prk=\");\n_c = App;\nfunction filterTree(tree, id) {\n  for (const node of tree) {\n    if (node.id === id) return [node];\n    if (node.children) {\n      const match = filterTree(node.children, id);\n      if (match.length > 0) return match;\n    }\n  }\n  return [];\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TreeView","GraphView","UploadButton","DownloadButtons","TreeEditor","parseTree","generateHTML","jsxDEV","_jsxDEV","App","_s","treeText","setTreeText","treeData","setTreeData","focusedNode","setFocusedNode","displayedTree","parsed","err","console","error","handleTextChange","e","target","value","handleFileLoad","text","handleFocus","node","setPinnedId","id","handleUnFocus","handleDownloadHTML","html","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleDownloadJSON","json","JSON","stringify","className","children","onLoad","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleUnfocus","disabled","focusedNodeId","tree","onDownloadHTML","onDownloadJSON","onDownloadSVG","onFocus","onUnFocus","pinnedId","_c","filterTree","match","length","$RefreshReg$"],"sources":["/home/jbrannigan/src/familytree/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TreeView from \"./TreeView\";\r\nimport GraphView from \"./GraphView\";\r\nimport UploadButton from \"./UploadButton\";\r\nimport DownloadButtons from \"./DownloadButtons\";\r\nimport TreeEditor from \"./TreeEditor\";\r\nimport { parseTree } from \"./utils/parseTree\";\r\nimport { generateHTML } from \"./utils/generateHTML\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [treeText, setTreeText] = useState([]);\r\n  const [treeData, setTreeData] = useState([]);\r\n  const [focusedNode, setFocusedNode] = useState(null);\r\n\r\nconst displayedTree = focusedNode ? [focusedNode] : treeData;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const parsed = parseTree(treeText);\r\n      setTreeData(parsed);\r\n    } catch (err) {\r\n      console.error(\"Failed to parse tree:\", err);\r\n    }\r\n  }, [treeText]);\r\n\r\n    const handleTextChange = (e) => setTreeText(e.target.value);\r\n    const handleFileLoad = (text) => setTreeText(text);\r\n    const handleFocus = (node) => setPinnedId(node.id);\r\n    const handleUnFocus = () => setPinnedId(null);\r\n\r\n  const handleDownloadHTML = () => {\r\n    const html = generateHTML(displayedTree);\r\n    const blob = new Blob([html], { type: \"text/html\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"family_tree.html\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleDownloadJSON = () => {\r\n    const json = JSON.stringify(displayedTree, null, 2);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"family_tree.json\";\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"top-bar\">\r\n        <UploadButton onLoad={handleFileLoad} />\r\n        <button onClick={handleUnfocus} disabled={!focusedNodeId}>\r\n          Unfocus\r\n        </button>\r\n        <DownloadButtons\r\n          tree={treeData}\r\n          treeText={treeText}\r\n          onDownloadHTML={handleDownloadHTML}\r\n          onDownloadJSON={handleDownloadJSON}\r\n          onDownloadSVG={() => {}}\r\n        />\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"pane\">\r\n          <TreeEditor treeText={treeText} setTreeText={setTreeText} />\r\n        </div>\r\n        <div className=\"pane\">\r\n          <TreeView\r\n            tree={displayedTree}\r\n            onFocus={handleFocus}\r\n            onUnFocus={handleUnFocus}\r\n            focusedNodeId={pinnedId}\r\n          />\r\n          <GraphView tree={displayedTree} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction filterTree(tree, id) {\r\n  for (const node of tree) {\r\n    if (node.id === id) return [node];\r\n    if (node.children) {\r\n      const match = filterTree(node.children, id);\r\n      if (match.length > 0) return match;\r\n    }\r\n  }\r\n  return [];\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}